Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for CLOCK_SetClockDiv
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockFRO96M) for BOARD_BootClockFRO96M
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for SPC_SetActiveModeCoreLDORegulatorConfig
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) for SPC_SetSRAMOperateVoltage
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_clock.o(.text.CLOCK_SetupFROHFClocking) for CLOCK_SetupFROHFClocking
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_clock.o(.text.CLOCK_SetupFRO12MClocking) for CLOCK_SetupFRO12MClocking
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for CLOCK_SetClockDiv
    clock_config.o(.text.BOARD_BootClockFRO96M) refers to system_mcxa156.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO96M) refers to clock_config.o(.text.BOARD_BootClockFRO96M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for SPC_SetActiveModeCoreLDORegulatorConfig
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) for SPC_SetSRAMOperateVoltage
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetupFRO12MClocking) for CLOCK_SetupFRO12MClocking
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for CLOCK_SetClockDiv
    clock_config.o(.text.BOARD_BootClockFRO12M) refers to system_mcxa156.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO12M) refers to clock_config.o(.text.BOARD_BootClockFRO12M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for SPC_SetActiveModeCoreLDORegulatorConfig
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) for SPC_SetSRAMOperateVoltage
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_clock.o(.text.CLOCK_SetupFROHFClocking) for CLOCK_SetupFROHFClocking
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_clock.o(.text.CLOCK_SetupFRO12MClocking) for CLOCK_SetupFRO12MClocking
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for CLOCK_SetClockDiv
    clock_config.o(.text.BOARD_BootClockFRO24M) refers to system_mcxa156.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO24M) refers to clock_config.o(.text.BOARD_BootClockFRO24M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for SPC_SetActiveModeCoreLDORegulatorConfig
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) for SPC_SetSRAMOperateVoltage
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_clock.o(.text.CLOCK_SetupFROHFClocking) for CLOCK_SetupFROHFClocking
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_clock.o(.text.CLOCK_SetupFRO12MClocking) for CLOCK_SetupFRO12MClocking
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for CLOCK_SetClockDiv
    clock_config.o(.text.BOARD_BootClockFRO48M) refers to system_mcxa156.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO48M) refers to clock_config.o(.text.BOARD_BootClockFRO48M) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for SPC_SetActiveModeCoreLDORegulatorConfig
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) for SPC_SetSRAMOperateVoltage
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_clock.o(.text.CLOCK_SetupFROHFClocking) for CLOCK_SetupFROHFClocking
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_clock.o(.text.CLOCK_SetupFRO12MClocking) for CLOCK_SetupFRO12MClocking
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for CLOCK_SetClockDiv
    clock_config.o(.text.BOARD_BootClockFRO64M) refers to system_mcxa156.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO64M) refers to clock_config.o(.text.BOARD_BootClockFRO64M) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitBootPins) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for RESET_SetPeripheralReset
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitPins) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for RESET_SetPeripheralReset
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for LPUART_GetDefaultConfig
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_lpuart.o(.text.LPUART_Init) for LPUART_Init
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for LPUART_Deinit
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for LPUART_ReadBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for LPUART_WriteBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    system_mcxa156.o(.text.SystemInit) refers to startup_mcxa156.o(.isr_vector) for __Vectors
    system_mcxa156.o(.text.SystemInit) refers to system_mcxa156.o(.text.SystemInitHook) for SystemInitHook
    system_mcxa156.o(.ARM.exidx.text.SystemInit) refers to system_mcxa156.o(.text.SystemInit) for [Anonymous Symbol]
    system_mcxa156.o(.ARM.exidx.text.SystemInitHook) refers to system_mcxa156.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mcxa156.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mcxa156.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_AttachClk) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_AttachClk) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_AttachClk) refers to fsl_clock.o(.text.CLOCK_AttachClk) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetClockSelect) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_SetClockSelect) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetClockSelect) refers to fsl_clock.o(.text.CLOCK_SetClockSelect) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetClockAttachId) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetClockAttachId) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockAttachId) refers to fsl_clock.o(.text.CLOCK_GetClockAttachId) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetClockSelect) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetClockSelect) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockSelect) refers to fsl_clock.o(.text.CLOCK_GetClockSelect) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetClockDiv) refers to fsl_clock.o(.rodata.str1.1) for .L.str.2
    fsl_clock.o(.text.CLOCK_SetClockDiv) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetClockDiv) refers to fsl_clock.o(.text.CLOCK_SetClockDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetClockDiv) refers to fsl_clock.o(.rodata.str1.1) for .L.str.2
    fsl_clock.o(.text.CLOCK_GetClockDiv) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockDiv) refers to fsl_clock.o(.text.CLOCK_GetClockDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_HaltClockDiv) refers to fsl_clock.o(.rodata.str1.1) for .L.str.2
    fsl_clock.o(.text.CLOCK_HaltClockDiv) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_HaltClockDiv) refers to fsl_clock.o(.text.CLOCK_HaltClockDiv) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFROHFClocking) refers to fsl_clock.o(.text.CLOCK_SetupFROHFClocking) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFRO12MClocking) refers to fsl_clock.o(.text.CLOCK_SetupFRO12MClocking) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFRO16KClocking) refers to fsl_clock.o(.text.CLOCK_SetupFRO16KClocking) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupExtClocking) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupExtClocking) refers to fsl_clock.o(.text.CLOCK_SetupExtClocking) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetupExtRefClocking) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetupExtRefClocking) refers to fsl_clock.o(.text.CLOCK_SetupExtRefClocking) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetMainClk) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.text.CLOCK_GetMainClk) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMainClk) refers to fsl_clock.o(.text.CLOCK_GetMainClk) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetI3CFClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetI3CFClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetI3CFClkFreq) refers to fsl_clock.o(.text.CLOCK_GetI3CFClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCTimerClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCTimerClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetLpi2cClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetLpi2cClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetLpi2cClkFreq) refers to fsl_clock.o(.text.CLOCK_GetLpi2cClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetLpspiClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetLpspiClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetLpspiClkFreq) refers to fsl_clock.o(.text.CLOCK_GetLpspiClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetLpuartClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetLpuartClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetLpuartClkFreq) refers to fsl_clock.o(.text.CLOCK_GetLpuartClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetLptmrClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetLptmrClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetLptmrClkFreq) refers to fsl_clock.o(.text.CLOCK_GetLptmrClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOstimerClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOstimerClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAdcClkFreq) refers to fsl_clock.o(.text.CLOCK_GetAdcClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetDacClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetDacClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetDacClkFreq) refers to fsl_clock.o(.text.CLOCK_GetDacClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCmpFClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetCmpFClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCmpFClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCmpFClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCmpRRClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetCmpRRClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCmpRRClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCmpRRClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetTraceClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetTraceClkFreq) refers to fsl_clock.o(.text.CLOCK_GetTraceClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetClkoutClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetClkoutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.text.CLOCK_GetClkoutClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetClkoutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetClkoutClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetSystickClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystickClkFreq) refers to fsl_clock.o(.text.CLOCK_GetSystickClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetWwdtClkFreq) refers to fsl_clock.o(.text.CLOCK_GetWwdtClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexioClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetFlexioClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexioClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexioClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexcanClkFreq) refers to fsl_clock.o(.rodata.cst32) for .Lswitch.table.CLOCK_GetFlexcanClkFreq
    fsl_clock.o(.text.CLOCK_GetFlexcanClkFreq) refers to fsl_clock.o(.data.s_Ext_Clk_Freq) for s_Ext_Clk_Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexcanClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexcanClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_FROHFTrimConfig) refers to fsl_clock.o(.text.CLOCK_FROHFTrimConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_FRO12MTrimConfig) refers to fsl_clock.o(.text.CLOCK_FRO12MTrimConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSysOscMonitorMode) refers to fsl_clock.o(.text.CLOCK_SetSysOscMonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfsClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfsClock) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount) refers to fsl_common_arm.o(.text.MSDK_GetCpuCycleCount) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_GetVersionInfo) refers to fsl_gpio.o(.text.GPIO_GetVersionInfo) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_GpioGetInterruptFlags) refers to fsl_gpio.o(.text.GPIO_GpioGetInterruptFlags) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinGetInterruptFlag) refers to fsl_gpio.o(.text.GPIO_PinGetInterruptFlag) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_GpioClearInterruptFlags) refers to fsl_gpio.o(.text.GPIO_GpioClearInterruptFlags) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinClearInterruptFlag) refers to fsl_gpio.o(.text.GPIO_PinClearInterruptFlag) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartResets) for s_lpuartResets
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for RESET_SetPeripheralReset
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Init) refers to fsl_lpuart.o(.text.LPUART_Init) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.3
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.1
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.text.LPUART_SetBaudRate) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.text.LPUART_Enable9bitMode) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress) refers to fsl_lpuart.o(.text.LPUART_SendAddress) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts) refers to fsl_lpuart.o(.text.LPUART_EnableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts) refers to fsl_lpuart.o(.text.LPUART_DisableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts) refers to fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags) refers to fsl_lpuart.o(.text.LPUART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_WriteBlocking16bit) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_WriteBlocking16bit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking16bit) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking16bit) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ReadBlocking16bit) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_ReadBlocking16bit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking16bit) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking16bit) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartIRQ) for s_lpuartIRQ
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for LPUART_TransferHandleIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.text.LPUART_TransferAbortSend) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.text.LPUART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART0_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART0_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART0_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.data.s_lpuartIsr) refers to startup_mcxa156.o(.text) for DefaultISR
    fsl_reset.o(.text.RESET_SetPeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_SetPeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_SetPeripheralReset) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_ClearPeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_ClearPeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_ClearPeripheralReset) refers to fsl_reset.o(.text.RESET_ClearPeripheralReset) for [Anonymous Symbol]
    fsl_reset.o(.text.RESET_PeripheralReset) refers to fsl_reset.o(.rodata.str1.1) for .L.str
    fsl_reset.o(.text.RESET_PeripheralReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_reset.o(.ARM.exidx.text.RESET_PeripheralReset) refers to fsl_reset.o(.text.RESET_PeripheralReset) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_GetPowerDomainLowPowerMode) refers to fsl_spc.o(.rodata.str1.1) for .L.str.1
    fsl_spc.o(.text.SPC_GetPowerDomainLowPowerMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_GetPowerDomainLowPowerMode) refers to fsl_spc.o(.text.SPC_GetPowerDomainLowPowerMode) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_GetPeriphIOIsolationStatus) refers to fsl_spc.o(.text.SPC_GetPeriphIOIsolationStatus) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetLowPowerRequestConfig) refers to fsl_spc.o(.rodata.str1.1) for .L.str.2
    fsl_spc.o(.text.SPC_SetLowPowerRequestConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerRequestConfig) refers to fsl_spc.o(.text.SPC_SetLowPowerRequestConfig) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) refers to fsl_spc.o(.rodata.str1.1) for .L.str.2
    fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetSRAMOperateVoltage) refers to fsl_spc.o(.text.SPC_SetSRAMOperateVoltage) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeBandgapModeConfig) refers to fsl_spc.o(.text.SPC_SetActiveModeBandgapModeConfig) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeBandgapmodeConfig) refers to fsl_spc.o(.text.SPC_SetLowPowerModeBandgapmodeConfig) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetCoreVoltageDetectConfig) refers to fsl_spc.o(.rodata.str1.1) for .L.str.2
    fsl_spc.o(.text.SPC_SetCoreVoltageDetectConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetCoreVoltageDetectConfig) refers to fsl_spc.o(.text.SPC_SetCoreVoltageDetectConfig) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_EnableActiveModeCoreLowVoltageDetect) refers to fsl_spc.o(.text.SPC_EnableActiveModeCoreLowVoltageDetect) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_EnableLowPowerModeCoreLowVoltageDetect) refers to fsl_spc.o(.text.SPC_EnableLowPowerModeCoreLowVoltageDetect) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetSystemVDDLowVoltageLevel) refers to fsl_spc.o(.text.SPC_SetSystemVDDLowVoltageLevel) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetSystemVoltageDetectConfig) refers to fsl_spc.o(.rodata.str1.1) for .L.str.2
    fsl_spc.o(.text.SPC_SetSystemVoltageDetectConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetSystemVoltageDetectConfig) refers to fsl_spc.o(.text.SPC_SetSystemVoltageDetectConfig) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_EnableActiveModeSystemHighVoltageDetect) refers to fsl_spc.o(.text.SPC_EnableActiveModeSystemHighVoltageDetect) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_EnableActiveModeSystemLowVoltageDetect) refers to fsl_spc.o(.text.SPC_EnableActiveModeSystemLowVoltageDetect) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_EnableLowPowerModeSystemHighVoltageDetect) refers to fsl_spc.o(.text.SPC_EnableLowPowerModeSystemHighVoltageDetect) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_EnableLowPowerModeSystemLowVoltageDetect) refers to fsl_spc.o(.text.SPC_EnableLowPowerModeSystemLowVoltageDetect) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetExternalVoltageDomainsConfig) refers to fsl_spc.o(.text.SPC_SetExternalVoltageDomainsConfig) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) refers to fsl_spc.o(.rodata.str1.1) for .L.str.1
    fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeCoreLDORegulatorConfig) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeCoreLDORegulatorDriveStrength) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorDriveStrength) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeCoreLDORegulatorVoltageLevel) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorVoltageLevel) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeCoreLDORegulatorConfig) refers to fsl_spc.o(.text.SPC_SetLowPowerModeCoreLDORegulatorConfig) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeCoreLDORegulatorDriveStrength) refers to fsl_spc.o(.text.SPC_SetLowPowerModeCoreLDORegulatorDriveStrength) for [Anonymous Symbol]
    fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeCoreLDORegulatorVoltageLevel) refers to fsl_spc.o(.text.SPC_SetLowPowerModeCoreLDORegulatorVoltageLevel) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig) refers to fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig) for SPC_SetActiveModeCoreLDORegulatorConfig
    fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig) refers to fsl_spc.o(.rodata.str1.1) for .L.str.2
    fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeRegulatorsConfig) refers to fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig) for [Anonymous Symbol]
    fsl_spc.o(.text.SPC_SetLowPowerModeRegulatorsConfig) refers to fsl_spc.o(.rodata.str1.1) for .L.str.2
    fsl_spc.o(.text.SPC_SetLowPowerModeRegulatorsConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeRegulatorsConfig) refers to fsl_spc.o(.text.SPC_SetLowPowerModeRegulatorsConfig) for [Anonymous Symbol]
    fsl_cmc.o(.ARM.exidx.text.CMC_SetClockMode) refers to fsl_cmc.o(.text.CMC_SetClockMode) for [Anonymous Symbol]
    fsl_cmc.o(.ARM.exidx.text.CMC_SetPowerModeProtection) refers to fsl_cmc.o(.text.CMC_SetPowerModeProtection) for [Anonymous Symbol]
    fsl_cmc.o(.text.CMC_ConfigResetPin) refers to fsl_cmc.o(.rodata.str1.1) for .L.str
    fsl_cmc.o(.text.CMC_ConfigResetPin) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_cmc.o(.ARM.exidx.text.CMC_ConfigResetPin) refers to fsl_cmc.o(.text.CMC_ConfigResetPin) for [Anonymous Symbol]
    fsl_cmc.o(.ARM.exidx.text.CMC_ConfigFlashMode) refers to fsl_cmc.o(.text.CMC_ConfigFlashMode) for [Anonymous Symbol]
    fsl_cmc.o(.text.CMC_PreEnterLowPowerMode) refers to fsl_cmc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_cmc.o(.ARM.exidx.text.CMC_PreEnterLowPowerMode) refers to fsl_cmc.o(.text.CMC_PreEnterLowPowerMode) for [Anonymous Symbol]
    fsl_cmc.o(.text.CMC_PostExitLowPowerMode) refers to fsl_cmc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_cmc.o(.ARM.exidx.text.CMC_PostExitLowPowerMode) refers to fsl_cmc.o(.text.CMC_PostExitLowPowerMode) for [Anonymous Symbol]
    fsl_cmc.o(.ARM.exidx.text.CMC_GlobalEnterLowPowerMode) refers to fsl_cmc.o(.text.CMC_GlobalEnterLowPowerMode) for [Anonymous Symbol]
    fsl_cmc.o(.text.CMC_EnterLowPowerMode) refers to fsl_cmc.o(.rodata.str1.1) for .L.str
    fsl_cmc.o(.text.CMC_EnterLowPowerMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_cmc.o(.ARM.exidx.text.CMC_EnterLowPowerMode) refers to fsl_cmc.o(.text.CMC_EnterLowPowerMode) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_InstallTCD) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_InstallTCD) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_InstallTCD) refers to fsl_edma.o(.text.EDMA_InstallTCD) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_Init) refers to fsl_reset.o(.text.RESET_SetPeripheralReset) for RESET_SetPeripheralReset
    fsl_edma.o(.text.EDMA_Init) refers to fsl_edma.o(.rodata.str1.1) for .L.str.40
    fsl_edma.o(.text.EDMA_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_Init) refers to fsl_edma.o(.text.EDMA_Init) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_InitChannel) refers to fsl_edma.o(.rodata.str1.1) for .L.str.1
    fsl_edma.o(.text.EDMA_InitChannel) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_InitChannel) refers to fsl_edma.o(.text.EDMA_InitChannel) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_Deinit) refers to fsl_edma.o(.rodata.str1.1) for .L.str.40
    fsl_edma.o(.text.EDMA_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_Deinit) refers to fsl_edma.o(.text.EDMA_Deinit) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetChannelPreemptionConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetChannelPreemptionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetChannelPreemptionConfig) refers to fsl_edma.o(.text.EDMA_SetChannelPreemptionConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_edma.o(.text.EDMA_GetDefaultConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str.4
    fsl_edma.o(.text.EDMA_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_GetDefaultConfig) refers to fsl_edma.o(.text.EDMA_GetDefaultConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_ResetChannel) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_ResetChannel) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_ResetChannel) refers to fsl_edma.o(.text.EDMA_ResetChannel) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_ClearChannelStatusFlags) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_ClearChannelStatusFlags) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_ClearChannelStatusFlags) refers to fsl_edma.o(.text.EDMA_ClearChannelStatusFlags) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdResetExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdResetExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdResetExt) refers to fsl_edma.o(.text.EDMA_TcdResetExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetTransferConfig) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) for EDMA_ConfigChannelSoftwareTCDExt
    fsl_edma.o(.text.EDMA_SetTransferConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetTransferConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetTransferConfig) refers to fsl_edma.o(.text.EDMA_SetTransferConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetTransferConfigExt) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) for EDMA_ConfigChannelSoftwareTCDExt
    fsl_edma.o(.text.EDMA_TcdSetTransferConfigExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetTransferConfigExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetTransferConfigExt) refers to fsl_edma.o(.text.EDMA_TcdSetTransferConfigExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetMinorOffsetConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetMinorOffsetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetMinorOffsetConfig) refers to fsl_edma.o(.text.EDMA_SetMinorOffsetConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetMajorOffsetConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetMajorOffsetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetMajorOffsetConfig) refers to fsl_edma.o(.text.EDMA_SetMajorOffsetConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetChannelLink) refers to fsl_edma.o(.text.EDMA_TcdSetChannelLinkExt) for EDMA_TcdSetChannelLinkExt
    fsl_edma.o(.text.EDMA_SetChannelLink) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetChannelLink) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetChannelLink) refers to fsl_edma.o(.text.EDMA_SetChannelLink) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetChannelLinkExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetChannelLinkExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetChannelLinkExt) refers to fsl_edma.o(.text.EDMA_TcdSetChannelLinkExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetBandWidth) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetBandWidth) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetBandWidth) refers to fsl_edma.o(.text.EDMA_SetBandWidth) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetModulo) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_SetModulo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetModulo) refers to fsl_edma.o(.text.EDMA_SetModulo) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.8
    fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_ConfigChannelSoftwareTCDExt) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfigExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfigExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMinorOffsetConfigExt) refers to fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfigExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfigExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.7
    fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfigExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMajorOffsetConfigExt) refers to fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfigExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetModuloExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetModuloExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetModuloExt) refers to fsl_edma.o(.text.EDMA_TcdSetModuloExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdEnableInterruptsExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdEnableInterruptsExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdEnableInterruptsExt) refers to fsl_edma.o(.text.EDMA_TcdEnableInterruptsExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdDisableInterruptsExt) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdDisableInterruptsExt) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdDisableInterruptsExt) refers to fsl_edma.o(.text.EDMA_TcdDisableInterruptsExt) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdReset) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdReset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdReset) refers to fsl_edma.o(.text.EDMA_TcdReset) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetTransferConfig) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCD) for EDMA_ConfigChannelSoftwareTCD
    fsl_edma.o(.text.EDMA_TcdSetTransferConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetTransferConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetTransferConfig) refers to fsl_edma.o(.text.EDMA_TcdSetTransferConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCD) refers to fsl_edma.o(.rodata.str1.1) for .L.str.8
    fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCD) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_ConfigChannelSoftwareTCD) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCD) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMinorOffsetConfig) refers to fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMajorOffsetConfig) refers to fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetChannelLink) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetChannelLink) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetChannelLink) refers to fsl_edma.o(.text.EDMA_TcdSetChannelLink) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdSetModulo) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdSetModulo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetModulo) refers to fsl_edma.o(.text.EDMA_TcdSetModulo) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdEnableInterrupts) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdEnableInterrupts) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdEnableInterrupts) refers to fsl_edma.o(.text.EDMA_TcdEnableInterrupts) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_TcdDisableInterrupts) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_TcdDisableInterrupts) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_TcdDisableInterrupts) refers to fsl_edma.o(.text.EDMA_TcdDisableInterrupts) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_GetRemainingMajorLoopCount) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_GetRemainingMajorLoopCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_GetRemainingMajorLoopCount) refers to fsl_edma.o(.text.EDMA_GetRemainingMajorLoopCount) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_EnableChannelInterrupts) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_EnableChannelInterrupts) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_EnableChannelInterrupts) refers to fsl_edma.o(.text.EDMA_EnableChannelInterrupts) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_DisableChannelInterrupts) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_DisableChannelInterrupts) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_DisableChannelInterrupts) refers to fsl_edma.o(.text.EDMA_DisableChannelInterrupts) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_GetChannelStatusFlags) refers to fsl_edma.o(.rodata.str1.1) for .L.str
    fsl_edma.o(.text.EDMA_GetChannelStatusFlags) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_GetChannelStatusFlags) refers to fsl_edma.o(.text.EDMA_GetChannelStatusFlags) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_CreateHandle) refers to memset.o(.text) for memset
    fsl_edma.o(.text.EDMA_CreateHandle) refers to fsl_edma.o(.bss.s_EDMAHandle) for s_EDMAHandle
    fsl_edma.o(.text.EDMA_CreateHandle) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_CreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_CreateHandle) refers to fsl_edma.o(.text.EDMA_CreateHandle) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_InstallTCDMemory) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_InstallTCDMemory) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_InstallTCDMemory) refers to fsl_edma.o(.text.EDMA_InstallTCDMemory) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SetCallback) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_SetCallback) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SetCallback) refers to fsl_edma.o(.text.EDMA_SetCallback) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_PrepareTransferConfig) refers to memset.o(.text) for memset
    fsl_edma.o(.text.EDMA_PrepareTransferConfig) refers to fsl_edma.o(.rodata.str1.1) for .L.str.4
    fsl_edma.o(.text.EDMA_PrepareTransferConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_PrepareTransferConfig) refers to fsl_edma.o(.text.EDMA_PrepareTransferConfig) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_PrepareTransfer) refers to fsl_edma.o(.text.EDMA_PrepareTransferConfig) for EDMA_PrepareTransferConfig
    fsl_edma.o(.text.EDMA_PrepareTransfer) refers to fsl_edma.o(.rodata.str1.1) for .L.str.4
    fsl_edma.o(.text.EDMA_PrepareTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_PrepareTransfer) refers to fsl_edma.o(.text.EDMA_PrepareTransfer) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_PrepareTransferTCD) refers to fsl_edma.o(.rodata.str1.1) for .L.str.2
    fsl_edma.o(.text.EDMA_PrepareTransferTCD) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_PrepareTransferTCD) refers to fsl_edma.o(.text.EDMA_PrepareTransferTCD) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SubmitTransferTCD) refers to memcpy.o(.text) for memcpy
    fsl_edma.o(.text.EDMA_SubmitTransferTCD) refers to fsl_edma.o(.text.EDMA_InstallTCD) for EDMA_InstallTCD
    fsl_edma.o(.text.EDMA_SubmitTransferTCD) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_SubmitTransferTCD) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SubmitTransferTCD) refers to fsl_edma.o(.text.EDMA_SubmitTransferTCD) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SubmitTransfer) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) for EDMA_ConfigChannelSoftwareTCDExt
    fsl_edma.o(.text.EDMA_SubmitTransfer) refers to fsl_edma.o(.text.EDMA_InstallTCD) for EDMA_InstallTCD
    fsl_edma.o(.text.EDMA_SubmitTransfer) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_SubmitTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SubmitTransfer) refers to fsl_edma.o(.text.EDMA_SubmitTransfer) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_SubmitLoopTransfer) refers to memset.o(.text) for memset
    fsl_edma.o(.text.EDMA_SubmitLoopTransfer) refers to fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt) for EDMA_ConfigChannelSoftwareTCDExt
    fsl_edma.o(.text.EDMA_SubmitLoopTransfer) refers to fsl_edma.o(.text.EDMA_InstallTCD) for EDMA_InstallTCD
    fsl_edma.o(.text.EDMA_SubmitLoopTransfer) refers to fsl_edma.o(.rodata.str1.1) for .L.str.8
    fsl_edma.o(.text.EDMA_SubmitLoopTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_SubmitLoopTransfer) refers to fsl_edma.o(.text.EDMA_SubmitLoopTransfer) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_StartTransfer) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_StartTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_StartTransfer) refers to fsl_edma.o(.text.EDMA_StartTransfer) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_StopTransfer) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_StopTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_StopTransfer) refers to fsl_edma.o(.text.EDMA_StopTransfer) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_AbortTransfer) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_AbortTransfer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_AbortTransfer) refers to fsl_edma.o(.text.EDMA_AbortTransfer) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_HandleIRQ) refers to fsl_edma.o(.rodata.str1.1) for .L.str.18
    fsl_edma.o(.text.EDMA_HandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_edma.o(.ARM.exidx.text.EDMA_HandleIRQ) refers to fsl_edma.o(.text.EDMA_HandleIRQ) for [Anonymous Symbol]
    fsl_edma.o(.text.EDMA_DriverIRQHandler) refers to fsl_edma.o(.bss.s_EDMAHandle) for s_EDMAHandle
    fsl_edma.o(.text.EDMA_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_HandleIRQ) for EDMA_HandleIRQ
    fsl_edma.o(.ARM.exidx.text.EDMA_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH0_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH0_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH1_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH1_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH2_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH2_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH3_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH3_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH4_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH4_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH5_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH5_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH6_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH6_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_edma_soc.o(.text.DMA_CH7_DriverIRQHandler) refers to fsl_edma.o(.text.EDMA_DriverIRQHandler) for EDMA_DriverIRQHandler
    fsl_edma_soc.o(.ARM.exidx.text.DMA_CH7_DriverIRQHandler) refers to fsl_edma_soc.o(.text.DMA_CH7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lptmr.o(.text.LPTMR_Init) refers to fsl_lptmr.o(.rodata.str1.1) for .L.str
    fsl_lptmr.o(.text.LPTMR_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lptmr.o(.ARM.exidx.text.LPTMR_Init) refers to fsl_lptmr.o(.text.LPTMR_Init) for [Anonymous Symbol]
    fsl_lptmr.o(.ARM.exidx.text.LPTMR_Deinit) refers to fsl_lptmr.o(.text.LPTMR_Deinit) for [Anonymous Symbol]
    fsl_lptmr.o(.text.LPTMR_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_lptmr.o(.text.LPTMR_GetDefaultConfig) refers to fsl_lptmr.o(.rodata.str1.1) for .L.str
    fsl_lptmr.o(.text.LPTMR_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lptmr.o(.ARM.exidx.text.LPTMR_GetDefaultConfig) refers to fsl_lptmr.o(.text.LPTMR_GetDefaultConfig) for [Anonymous Symbol]
    fsl_wuu.o(.text.WUU_SetExternalWakeUpPinsConfig) refers to fsl_wuu.o(.rodata.str1.1) for .L.str
    fsl_wuu.o(.text.WUU_SetExternalWakeUpPinsConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_wuu.o(.ARM.exidx.text.WUU_SetExternalWakeUpPinsConfig) refers to fsl_wuu.o(.text.WUU_SetExternalWakeUpPinsConfig) for [Anonymous Symbol]
    fsl_wuu.o(.ARM.exidx.text.WUU_ClearExternalWakeupPinsConfig) refers to fsl_wuu.o(.text.WUU_ClearExternalWakeupPinsConfig) for [Anonymous Symbol]
    fsl_wuu.o(.text.WUU_SetInternalWakeUpModulesConfig) refers to fsl_wuu.o(.rodata.str1.1) for .L.str.2
    fsl_wuu.o(.text.WUU_SetInternalWakeUpModulesConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_wuu.o(.ARM.exidx.text.WUU_SetInternalWakeUpModulesConfig) refers to fsl_wuu.o(.text.WUU_SetInternalWakeUpModulesConfig) for [Anonymous Symbol]
    fsl_wuu.o(.text.WUU_ClearInternalWakeUpModulesConfig) refers to fsl_wuu.o(.rodata.str1.1) for .L.str.2
    fsl_wuu.o(.text.WUU_ClearInternalWakeUpModulesConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_wuu.o(.ARM.exidx.text.WUU_ClearInternalWakeUpModulesConfig) refers to fsl_wuu.o(.text.WUU_ClearInternalWakeUpModulesConfig) for [Anonymous Symbol]
    fsl_wuu.o(.text.WUU_SetPinFilterConfig) refers to fsl_wuu.o(.rodata.str1.1) for .L.str
    fsl_wuu.o(.text.WUU_SetPinFilterConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_wuu.o(.ARM.exidx.text.WUU_SetPinFilterConfig) refers to fsl_wuu.o(.text.WUU_SetPinFilterConfig) for [Anonymous Symbol]
    fsl_wuu.o(.ARM.exidx.text.WUU_GetPinFilterFlag) refers to fsl_wuu.o(.text.WUU_GetPinFilterFlag) for [Anonymous Symbol]
    fsl_wuu.o(.ARM.exidx.text.WUU_ClearPinFilterFlag) refers to fsl_wuu.o(.text.WUU_ClearPinFilterFlag) for [Anonymous Symbol]
    fsl_wuu.o(.ARM.exidx.text.WUU_GetExternalWakeupPinFlag) refers to fsl_wuu.o(.text.WUU_GetExternalWakeupPinFlag) for [Anonymous Symbol]
    fsl_wuu.o(.ARM.exidx.text.WUU_ClearExternalWakeupPinFlag) refers to fsl_wuu.o(.text.WUU_ClearExternalWakeupPinFlag) for [Anonymous Symbol]
    continuous_sram_address.o(.text.DMA_CH0_IRQHandler) refers to fsl_edma.o(.text.EDMA_GetChannelStatusFlags) for EDMA_GetChannelStatusFlags
    continuous_sram_address.o(.text.DMA_CH0_IRQHandler) refers to fsl_edma.o(.text.EDMA_ClearChannelStatusFlags) for EDMA_ClearChannelStatusFlags
    continuous_sram_address.o(.text.DMA_CH0_IRQHandler) refers to continuous_sram_address.o(.bss.g_Transfer_Done) for g_Transfer_Done
    continuous_sram_address.o(.ARM.exidx.text.DMA_CH0_IRQHandler) refers to continuous_sram_address.o(.text.DMA_CH0_IRQHandler) for [Anonymous Symbol]
    continuous_sram_address.o(.text.APP_DeinitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for DbgConsole_Deinit
    continuous_sram_address.o(.ARM.exidx.text.APP_DeinitDebugConsole) refers to continuous_sram_address.o(.text.APP_DeinitDebugConsole) for [Anonymous Symbol]
    continuous_sram_address.o(.text.main) refers to fsl_clock.o(.text.CLOCK_SetupFRO16KClocking) for CLOCK_SetupFRO16KClocking
    continuous_sram_address.o(.text.main) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    continuous_sram_address.o(.text.main) refers to clock_config.o(.text.BOARD_InitBootClocks) for BOARD_InitBootClocks
    continuous_sram_address.o(.text.main) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    continuous_sram_address.o(.text.main) refers to fsl_spc.o(.text.SPC_EnableActiveModeCoreLowVoltageDetect) for SPC_EnableActiveModeCoreLowVoltageDetect
    continuous_sram_address.o(.text.main) refers to fsl_spc.o(.text.SPC_EnableActiveModeSystemHighVoltageDetect) for SPC_EnableActiveModeSystemHighVoltageDetect
    continuous_sram_address.o(.text.main) refers to fsl_spc.o(.text.SPC_EnableActiveModeSystemLowVoltageDetect) for SPC_EnableActiveModeSystemLowVoltageDetect
    continuous_sram_address.o(.text.main) refers to fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig) for SPC_SetActiveModeRegulatorsConfig
    continuous_sram_address.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    continuous_sram_address.o(.text.main) refers to fsl_spc.o(.text.SPC_SetLowPowerModeRegulatorsConfig) for SPC_SetLowPowerModeRegulatorsConfig
    continuous_sram_address.o(.text.main) refers to fsl_spc.o(.text.SPC_SetLowPowerRequestConfig) for SPC_SetLowPowerRequestConfig
    continuous_sram_address.o(.text.main) refers to continuous_sram_address.o(.rodata.str1.1) for .L.str
    continuous_sram_address.o(.text.main) refers to continuous_sram_address.o(.data.srcBuf1) for srcBuf1
    continuous_sram_address.o(.text.main) refers to continuous_sram_address.o(.bss.srcBuf2) for srcBuf2
    continuous_sram_address.o(.text.main) refers to continuous_sram_address.o(.bss.srcBuf3) for srcBuf3
    continuous_sram_address.o(.text.main) refers to continuous_sram_address.o(.data.p_destBuf) for p_destBuf
    continuous_sram_address.o(.text.main) refers to fsl_edma.o(.text.EDMA_GetDefaultConfig) for EDMA_GetDefaultConfig
    continuous_sram_address.o(.text.main) refers to fsl_edma.o(.text.EDMA_Init) for EDMA_Init
    continuous_sram_address.o(.text.main) refers to fsl_edma.o(.text.EDMA_PrepareTransfer) for EDMA_PrepareTransfer
    continuous_sram_address.o(.text.main) refers to fsl_edma.o(.text.EDMA_SetTransferConfig) for EDMA_SetTransferConfig
    continuous_sram_address.o(.text.main) refers to continuous_sram_address.o(.bss.g_Transfer_Done) for g_Transfer_Done
    continuous_sram_address.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for DbgConsole_Getchar
    continuous_sram_address.o(.text.main) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for LPUART_GetStatusFlags
    continuous_sram_address.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for DbgConsole_Deinit
    continuous_sram_address.o(.text.main) refers to fsl_reset.o(.text.RESET_PeripheralReset) for RESET_PeripheralReset
    continuous_sram_address.o(.text.main) refers to fsl_lptmr.o(.text.LPTMR_GetDefaultConfig) for LPTMR_GetDefaultConfig
    continuous_sram_address.o(.text.main) refers to fsl_lptmr.o(.text.LPTMR_Init) for LPTMR_Init
    continuous_sram_address.o(.text.main) refers to fsl_cmc.o(.text.CMC_SetPowerModeProtection) for CMC_SetPowerModeProtection
    continuous_sram_address.o(.text.main) refers to fsl_cmc.o(.text.CMC_ConfigFlashMode) for CMC_ConfigFlashMode
    continuous_sram_address.o(.text.main) refers to fsl_wuu.o(.text.WUU_SetExternalWakeUpPinsConfig) for WUU_SetExternalWakeUpPinsConfig
    continuous_sram_address.o(.text.main) refers to fsl_wuu.o(.text.WUU_SetInternalWakeUpModulesConfig) for WUU_SetInternalWakeUpModulesConfig
    continuous_sram_address.o(.text.main) refers to fsl_clock.o(.text.CLOCK_AttachClk) for CLOCK_AttachClk
    continuous_sram_address.o(.text.main) refers to fsl_cmc.o(.text.CMC_EnterLowPowerMode) for CMC_EnterLowPowerMode
    continuous_sram_address.o(.text.main) refers to clock_config.o(.text.BOARD_BootClockFRO48M) for BOARD_BootClockFRO48M
    continuous_sram_address.o(.ARM.exidx.text.main) refers to continuous_sram_address.o(.text.main) for [Anonymous Symbol]
    continuous_sram_address.o(.text.APP_InitDebugConsole) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    continuous_sram_address.o(.text.APP_InitDebugConsole) refers to clock_config.o(.text.BOARD_BootClockFRO48M) for BOARD_BootClockFRO48M
    continuous_sram_address.o(.text.APP_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    continuous_sram_address.o(.ARM.exidx.text.APP_InitDebugConsole) refers to continuous_sram_address.o(.text.APP_InitDebugConsole) for [Anonymous Symbol]
    startup_mcxa156.o(.text) refers to startup_mcxa156.o(.isr_vector) for __Vectors
    startup_mcxa156.o(.text) refers to system_mcxa156.o(.text.SystemInit) for SystemInit
    startup_mcxa156.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH0_DriverIRQHandler) for DMA_CH0_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH1_DriverIRQHandler) for DMA_CH1_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH2_DriverIRQHandler) for DMA_CH2_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH3_DriverIRQHandler) for DMA_CH3_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH4_DriverIRQHandler) for DMA_CH4_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH5_DriverIRQHandler) for DMA_CH5_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH6_DriverIRQHandler) for DMA_CH6_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_edma_soc.o(.text.DMA_CH7_DriverIRQHandler) for DMA_CH7_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_lpuart.o(.text.LPUART0_DriverIRQHandler) for LPUART0_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for LPUART1_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for LPUART2_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for LPUART3_DriverIRQHandler
    startup_mcxa156.o(.text) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for LPUART4_DriverIRQHandler
    startup_mcxa156.o(.isr_vector) refers to startup_mcxa156.o(.text) for Reset_Handler
    startup_mcxa156.o(.isr_vector) refers to continuous_sram_address.o(.text.DMA_CH0_IRQHandler) for DMA_CH0_IRQHandler
    fsl_assert.o(.ARM.exidx.text.fsl_assert_hook) refers to fsl_assert.o(.text.fsl_assert_hook) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_assert.o(.text.fsl_assert_hook) for fsl_assert_hook
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_EnterLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) for HAL_UartEnterLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower) refers to fsl_debug_console.o(.text.DbgConsole_EnterLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_ExitLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower) for HAL_UartExitLowpower
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower) refers to fsl_debug_console.o(.text.DbgConsole_ExitLowpower) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to strlen.o(.text) for strlen
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to memcpy.o(.text) for memcpy
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatScanf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to continuous_sram_address.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to continuous_sram_address.o(.text.main) for main
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO96M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFRO12M), (158 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO12M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFRO24M), (180 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO24M), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO48M), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockFRO64M), (178 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockFRO64M), (8 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.text.BOARD_InitBootPins), (70 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (68 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (86 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (108 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text), (0 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower), (4 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing system_mcxa156.o(.text), (0 bytes).
    Removing system_mcxa156.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mcxa156.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mcxa156.o(.text.SystemCoreClockUpdate), (2 bytes).
    Removing system_mcxa156.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_AttachClk), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetClockSelect), (102 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetClockSelect), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockAttachId), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockAttachId), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockSelect), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockSelect), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetClockDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClockDiv), (54 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClockDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_HaltClockDiv), (72 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_HaltClockDiv), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFROHFClocking), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFRO12MClocking), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupFRO16KClocking), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupExtClocking), (164 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupExtClocking), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetupExtRefClocking), (84 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetupExtRefClocking), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreq), (414 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMainClk), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMainClk), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetI3CFClkFreq), (180 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetI3CFClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetCTimerClkFreq), (242 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCTimerClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetLpi2cClkFreq), (218 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetLpi2cClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetLpspiClkFreq), (202 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetLpspiClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetLpuartClkFreq), (264 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetLpuartClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetLptmrClkFreq), (178 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetLptmrClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetOstimerClkFreq), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOstimerClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetAdcClkFreq), (180 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAdcClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetDacClkFreq), (178 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetDacClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetCmpFClkFreq), (200 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCmpFClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetCmpRRClkFreq), (202 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCmpRRClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetTraceClkFreq), (94 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetTraceClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetClkoutClkFreq), (208 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetClkoutClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetSystickClkFreq), (94 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetSystickClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetWwdtClkFreq), (38 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetWwdtClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexioClkFreq), (162 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexioClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexcanClkFreq), (126 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexcanClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_FROHFTrimConfig), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_FROHFTrimConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_FRO12MTrimConfig), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_FRO12MTrimConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetSysOscMonitorMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSysOscMonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfsClock), (142 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfsClock), (8 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (72 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (24 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter), (136 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter), (8 bytes).
    Removing fsl_common_arm.o(.text.MSDK_GetCpuCycleCount), (12 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount), (8 bytes).
    Removing fsl_common_arm.o(.text.SDK_DelayAtLeastUs), (84 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_common_arm.o(.rodata.str1.1), (25 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinInit), (96 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_GetVersionInfo), (18 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_GetVersionInfo), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_GpioGetInterruptFlags), (6 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_GpioGetInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinGetInterruptFlag), (14 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinGetInterruptFlag), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_GpioClearInterruptFlags), (6 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_GpioClearInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinClearInterruptFlag), (18 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinClearInterruptFlag), (8 bytes).
    Removing fsl_lpuart.o(.text), (0 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetInstance), (50 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength), (38 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Init), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SetBaudRate), (232 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Enable9bitMode), (64 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SendAddress), (44 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_EnableInterrupts), (76 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_DisableInterrupts), (86 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts), (42 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_ClearStatusFlags), (60 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_WriteBlocking16bit), (54 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking16bit), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_ReadBlocking16bit), (274 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking16bit), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferCreateHandle), (216 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleIRQ), (1084 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer), (104 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer), (64 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking), (188 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortSend), (54 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetSendCount), (86 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking), (440 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortReceive), (60 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ), (2 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART0_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.rodata.s_lpuartIRQ), (5 bytes).
    Removing fsl_reset.o(.text), (0 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_SetPeripheralReset), (8 bytes).
    Removing fsl_reset.o(.text.RESET_ClearPeripheralReset), (108 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_ClearPeripheralReset), (8 bytes).
    Removing fsl_reset.o(.ARM.exidx.text.RESET_PeripheralReset), (8 bytes).
    Removing fsl_spc.o(.text), (0 bytes).
    Removing fsl_spc.o(.text.SPC_GetPowerDomainLowPowerMode), (76 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_GetPowerDomainLowPowerMode), (8 bytes).
    Removing fsl_spc.o(.text.SPC_GetPeriphIOIsolationStatus), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_GetPeriphIOIsolationStatus), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerRequestConfig), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetSRAMOperateVoltage), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetActiveModeBandgapModeConfig), (44 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeBandgapModeConfig), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetLowPowerModeBandgapmodeConfig), (44 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeBandgapmodeConfig), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetCoreVoltageDetectConfig), (44 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetCoreVoltageDetectConfig), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_EnableActiveModeCoreLowVoltageDetect), (8 bytes).
    Removing fsl_spc.o(.text.SPC_EnableLowPowerModeCoreLowVoltageDetect), (22 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_EnableLowPowerModeCoreLowVoltageDetect), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetSystemVDDLowVoltageLevel), (2 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetSystemVDDLowVoltageLevel), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetSystemVoltageDetectConfig), (68 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetSystemVoltageDetectConfig), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_EnableActiveModeSystemHighVoltageDetect), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_EnableActiveModeSystemLowVoltageDetect), (8 bytes).
    Removing fsl_spc.o(.text.SPC_EnableLowPowerModeSystemHighVoltageDetect), (22 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_EnableLowPowerModeSystemHighVoltageDetect), (8 bytes).
    Removing fsl_spc.o(.text.SPC_EnableLowPowerModeSystemLowVoltageDetect), (22 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_EnableLowPowerModeSystemLowVoltageDetect), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetExternalVoltageDomainsConfig), (10 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetExternalVoltageDomainsConfig), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeCoreLDORegulatorConfig), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorDriveStrength), (58 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeCoreLDORegulatorDriveStrength), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorVoltageLevel), (50 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeCoreLDORegulatorVoltageLevel), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetLowPowerModeCoreLDORegulatorConfig), (110 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeCoreLDORegulatorConfig), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetLowPowerModeCoreLDORegulatorDriveStrength), (48 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeCoreLDORegulatorDriveStrength), (8 bytes).
    Removing fsl_spc.o(.text.SPC_SetLowPowerModeCoreLDORegulatorVoltageLevel), (46 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeCoreLDORegulatorVoltageLevel), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetActiveModeRegulatorsConfig), (8 bytes).
    Removing fsl_spc.o(.ARM.exidx.text.SPC_SetLowPowerModeRegulatorsConfig), (8 bytes).
    Removing fsl_cmc.o(.text), (0 bytes).
    Removing fsl_cmc.o(.text.CMC_SetClockMode), (10 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_SetClockMode), (8 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_SetPowerModeProtection), (8 bytes).
    Removing fsl_cmc.o(.text.CMC_ConfigResetPin), (80 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_ConfigResetPin), (8 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_ConfigFlashMode), (8 bytes).
    Removing fsl_cmc.o(.text.CMC_PreEnterLowPowerMode), (22 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_PreEnterLowPowerMode), (8 bytes).
    Removing fsl_cmc.o(.text.CMC_PostExitLowPowerMode), (20 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_PostExitLowPowerMode), (8 bytes).
    Removing fsl_cmc.o(.text.CMC_GlobalEnterLowPowerMode), (44 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_GlobalEnterLowPowerMode), (8 bytes).
    Removing fsl_cmc.o(.ARM.exidx.text.CMC_EnterLowPowerMode), (8 bytes).
    Removing fsl_cmc.o(.bss.g_savedPrimask), (4 bytes).
    Removing fsl_edma.o(.text), (0 bytes).
    Removing fsl_edma.o(.text.EDMA_InstallTCD), (124 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_InstallTCD), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_Init), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_InitChannel), (156 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_InitChannel), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_Deinit), (88 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_Deinit), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetChannelPreemptionConfig), (86 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetChannelPreemptionConfig), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_GetDefaultConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_ResetChannel), (142 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_ResetChannel), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_ClearChannelStatusFlags), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdResetExt), (82 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdResetExt), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetTransferConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetTransferConfigExt), (114 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetTransferConfigExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetMinorOffsetConfig), (108 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetMinorOffsetConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetMajorOffsetConfig), (42 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetMajorOffsetConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetChannelLink), (68 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetChannelLink), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetChannelLinkExt), (188 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetChannelLinkExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetBandWidth), (50 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetBandWidth), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetModulo), (64 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetModulo), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_ConfigChannelSoftwareTCDExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfigExt), (96 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMinorOffsetConfigExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfigExt), (60 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMajorOffsetConfigExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetModuloExt), (78 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetModuloExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdEnableInterruptsExt), (54 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdEnableInterruptsExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdDisableInterruptsExt), (54 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdDisableInterruptsExt), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdReset), (54 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdReset), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetTransferConfig), (84 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetTransferConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCD), (632 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_ConfigChannelSoftwareTCD), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetMinorOffsetConfig), (68 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMinorOffsetConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetMajorOffsetConfig), (34 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetMajorOffsetConfig), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetChannelLink), (160 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetChannelLink), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdSetModulo), (50 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdSetModulo), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdEnableInterrupts), (54 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdEnableInterrupts), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_TcdDisableInterrupts), (54 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_TcdDisableInterrupts), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_GetRemainingMajorLoopCount), (72 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_GetRemainingMajorLoopCount), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_EnableChannelInterrupts), (102 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_EnableChannelInterrupts), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_DisableChannelInterrupts), (102 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_DisableChannelInterrupts), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_GetChannelStatusFlags), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_CreateHandle), (220 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_CreateHandle), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_InstallTCDMemory), (100 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_InstallTCDMemory), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SetCallback), (34 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SetCallback), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_PrepareTransferConfig), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_PrepareTransfer), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_PrepareTransferTCD), (1200 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_PrepareTransferTCD), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SubmitTransferTCD), (584 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SubmitTransferTCD), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SubmitTransfer), (552 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SubmitTransfer), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_SubmitLoopTransfer), (344 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_SubmitLoopTransfer), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_StartTransfer), (86 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_StartTransfer), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_StopTransfer), (44 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_StopTransfer), (8 bytes).
    Removing fsl_edma.o(.text.EDMA_AbortTransfer), (146 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_AbortTransfer), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_HandleIRQ), (8 bytes).
    Removing fsl_edma.o(.ARM.exidx.text.EDMA_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.text), (0 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH0_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH1_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH2_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH3_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH4_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH5_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH6_DriverIRQHandler), (8 bytes).
    Removing fsl_edma_soc.o(.ARM.exidx.text.DMA_CH7_DriverIRQHandler), (8 bytes).
    Removing fsl_lptmr.o(.text), (0 bytes).
    Removing fsl_lptmr.o(.ARM.exidx.text.LPTMR_Init), (8 bytes).
    Removing fsl_lptmr.o(.text.LPTMR_Deinit), (10 bytes).
    Removing fsl_lptmr.o(.ARM.exidx.text.LPTMR_Deinit), (8 bytes).
    Removing fsl_lptmr.o(.ARM.exidx.text.LPTMR_GetDefaultConfig), (8 bytes).
    Removing fsl_wuu.o(.text), (0 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_SetExternalWakeUpPinsConfig), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_ClearExternalWakeupPinsConfig), (34 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_ClearExternalWakeupPinsConfig), (8 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_SetInternalWakeUpModulesConfig), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_ClearInternalWakeUpModulesConfig), (50 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_ClearInternalWakeUpModulesConfig), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_SetPinFilterConfig), (130 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_SetPinFilterConfig), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_GetPinFilterFlag), (30 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_GetPinFilterFlag), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_ClearPinFilterFlag), (28 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_ClearPinFilterFlag), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_GetExternalWakeupPinFlag), (10 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_GetExternalWakeupPinFlag), (8 bytes).
    Removing fsl_wuu.o(.text.WUU_ClearExternalWakeupPinFlag), (10 bytes).
    Removing fsl_wuu.o(.ARM.exidx.text.WUU_ClearExternalWakeupPinFlag), (8 bytes).
    Removing continuous_sram_address.o(.text), (0 bytes).
    Removing continuous_sram_address.o(.ARM.exidx.text.DMA_CH0_IRQHandler), (8 bytes).
    Removing continuous_sram_address.o(.text.APP_DeinitDebugConsole), (32 bytes).
    Removing continuous_sram_address.o(.ARM.exidx.text.APP_DeinitDebugConsole), (8 bytes).
    Removing continuous_sram_address.o(.ARM.exidx.text.main), (8 bytes).
    Removing continuous_sram_address.o(.text.APP_InitDebugConsole), (18 bytes).
    Removing continuous_sram_address.o(.ARM.exidx.text.APP_InitDebugConsole), (8 bytes).
    Removing continuous_sram_address.o(.rodata..L__const.APP_SetSPCConfiguration.lpReqConfig), (3 bytes).
    Removing continuous_sram_address.o(.ARM.use_no_argv), (4 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.fsl_assert_hook), (8 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_EnterLowpower), (34 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_EnterLowpower), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_ExitLowpower), (34 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ExitLowpower), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (42 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (166 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.text.StrFormatPrintf), (700 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (754 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).

419 unused section(s) (total 20557 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    continuous_sram_address.c                0x00000000   Number         0  continuous_sram_address.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fsl_adapter_lpuart.c                     0x00000000   Number         0  fsl_adapter_lpuart.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_cmc.c                                0x00000000   Number         0  fsl_cmc.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_edma.c                               0x00000000   Number         0  fsl_edma.o ABSOLUTE
    fsl_edma_soc.c                           0x00000000   Number         0  fsl_edma_soc.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_lptmr.c                              0x00000000   Number         0  fsl_lptmr.o ABSOLUTE
    fsl_lpuart.c                             0x00000000   Number         0  fsl_lpuart.o ABSOLUTE
    fsl_reset.c                              0x00000000   Number         0  fsl_reset.o ABSOLUTE
    fsl_spc.c                                0x00000000   Number         0  fsl_spc.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    fsl_wuu.c                                0x00000000   Number         0  fsl_wuu.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    system_MCXA156.c                         0x00000000   Number         0  system_mcxa156.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x00000200   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x00000200   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x00000204   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000208   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000208   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000208   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000210   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x00000210   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000210   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x00000210   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x00000214   Section        0  startup_mcxa156.o(.text)
    .text                                    0x00000548   Section        0  memcpy.o(.text)
    .text                                    0x00000570   Section        0  memset.o(.text)
    .text                                    0x00000582   Section        0  strlen.o(.text)
    .text                                    0x00000590   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x000005b4   Section        0  clock_config.o(.text.BOARD_BootClockFRO48M)
    [Anonymous Symbol]                       0x00000668   Section        0  clock_config.o(.text.BOARD_BootClockFRO96M)
    [Anonymous Symbol]                       0x0000071c   Section        0  clock_config.o(.text.BOARD_InitBootClocks)
    [Anonymous Symbol]                       0x00000720   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x00000754   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x0000079c   Section        0  fsl_clock.o(.text.CLOCK_AttachClk)
    [Anonymous Symbol]                       0x00000810   Section        0  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    [Anonymous Symbol]                       0x000008bc   Section        0  fsl_clock.o(.text.CLOCK_SetClockDiv)
    [Anonymous Symbol]                       0x00000914   Section        0  fsl_clock.o(.text.CLOCK_SetupFRO12MClocking)
    [Anonymous Symbol]                       0x00000940   Section        0  fsl_clock.o(.text.CLOCK_SetupFRO16KClocking)
    [Anonymous Symbol]                       0x00000968   Section        0  fsl_clock.o(.text.CLOCK_SetupFROHFClocking)
    [Anonymous Symbol]                       0x00000a08   Section        0  fsl_cmc.o(.text.CMC_ConfigFlashMode)
    [Anonymous Symbol]                       0x00000a1c   Section        0  fsl_cmc.o(.text.CMC_EnterLowPowerMode)
    [Anonymous Symbol]                       0x00000ac4   Section        0  fsl_cmc.o(.text.CMC_SetPowerModeProtection)
    [Anonymous Symbol]                       0x00000ad0   Section        0  fsl_edma_soc.o(.text.DMA_CH0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000ad8   Section        0  continuous_sram_address.o(.text.DMA_CH0_IRQHandler)
    [Anonymous Symbol]                       0x00000b08   Section        0  fsl_edma_soc.o(.text.DMA_CH1_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b10   Section        0  fsl_edma_soc.o(.text.DMA_CH2_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b18   Section        0  fsl_edma_soc.o(.text.DMA_CH3_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b20   Section        0  fsl_edma_soc.o(.text.DMA_CH4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b28   Section        0  fsl_edma_soc.o(.text.DMA_CH5_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b30   Section        0  fsl_edma_soc.o(.text.DMA_CH6_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b38   Section        0  fsl_edma_soc.o(.text.DMA_CH7_DriverIRQHandler)
    [Anonymous Symbol]                       0x00000b40   Section        0  fsl_debug_console.o(.text.DbgConsole_Deinit)
    [Anonymous Symbol]                       0x00000b5c   Section        0  fsl_debug_console.o(.text.DbgConsole_Getchar)
    [Anonymous Symbol]                       0x00000b88   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    [Anonymous Symbol]                       0x00000bdc   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x00000bfc   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    [Anonymous Symbol]                       0x00001004   Section        0  fsl_edma.o(.text.EDMA_ClearChannelStatusFlags)
    [Anonymous Symbol]                       0x00001068   Section        0  fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt)
    [Anonymous Symbol]                       0x000012e0   Section        0  fsl_edma.o(.text.EDMA_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001308   Section        0  fsl_edma.o(.text.EDMA_GetChannelStatusFlags)
    [Anonymous Symbol]                       0x0000134c   Section        0  fsl_edma.o(.text.EDMA_GetDefaultConfig)
    [Anonymous Symbol]                       0x00001384   Section        0  fsl_edma.o(.text.EDMA_HandleIRQ)
    [Anonymous Symbol]                       0x00001464   Section        0  fsl_edma.o(.text.EDMA_Init)
    [Anonymous Symbol]                       0x000015a0   Section        0  fsl_edma.o(.text.EDMA_PrepareTransfer)
    [Anonymous Symbol]                       0x0000161c   Section        0  fsl_edma.o(.text.EDMA_PrepareTransferConfig)
    [Anonymous Symbol]                       0x00001978   Section        0  fsl_edma.o(.text.EDMA_SetTransferConfig)
    [Anonymous Symbol]                       0x00001a10   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartDeinit)
    [Anonymous Symbol]                       0x00001a44   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x00001b4c   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    [Anonymous Symbol]                       0x00001bb8   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    [Anonymous Symbol]                       0x00001c20   Section        0  fsl_lptmr.o(.text.LPTMR_GetDefaultConfig)
    [Anonymous Symbol]                       0x00001c54   Section        0  fsl_lptmr.o(.text.LPTMR_Init)
    [Anonymous Symbol]                       0x00001cac   Section        0  fsl_lpuart.o(.text.LPUART0_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001ccc   Section        0  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001ce8   Section        0  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d08   Section        0  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d28   Section        0  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    [Anonymous Symbol]                       0x00001d48   Section        0  fsl_lpuart.o(.text.LPUART_Deinit)
    [Anonymous Symbol]                       0x00001e30   Section        0  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    [Anonymous Symbol]                       0x00001e6c   Section        0  fsl_lpuart.o(.text.LPUART_GetStatusFlags)
    [Anonymous Symbol]                       0x00001e84   Section        0  fsl_lpuart.o(.text.LPUART_Init)
    [Anonymous Symbol]                       0x000021f0   Section        0  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    [Anonymous Symbol]                       0x00002310   Section        0  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    [Anonymous Symbol]                       0x00002348   Section        0  fsl_reset.o(.text.RESET_PeripheralReset)
    [Anonymous Symbol]                       0x00002444   Section        0  fsl_reset.o(.text.RESET_SetPeripheralReset)
    [Anonymous Symbol]                       0x000024d8   Section        0  fsl_spc.o(.text.SPC_EnableActiveModeCoreLowVoltageDetect)
    [Anonymous Symbol]                       0x000024f0   Section        0  fsl_spc.o(.text.SPC_EnableActiveModeSystemHighVoltageDetect)
    [Anonymous Symbol]                       0x00002508   Section        0  fsl_spc.o(.text.SPC_EnableActiveModeSystemLowVoltageDetect)
    [Anonymous Symbol]                       0x00002520   Section        0  fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig)
    [Anonymous Symbol]                       0x000025fc   Section        0  fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig)
    [Anonymous Symbol]                       0x00002668   Section        0  fsl_spc.o(.text.SPC_SetLowPowerModeRegulatorsConfig)
    [Anonymous Symbol]                       0x0000272c   Section        0  fsl_spc.o(.text.SPC_SetLowPowerRequestConfig)
    [Anonymous Symbol]                       0x00002768   Section        0  fsl_spc.o(.text.SPC_SetSRAMOperateVoltage)
    [Anonymous Symbol]                       0x000027ac   Section        0  system_mcxa156.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000028bc   Section        0  system_mcxa156.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x000028c0   Section        0  fsl_wuu.o(.text.WUU_SetExternalWakeUpPinsConfig)
    [Anonymous Symbol]                       0x0000294c   Section        0  fsl_wuu.o(.text.WUU_SetInternalWakeUpModulesConfig)
    [Anonymous Symbol]                       0x0000297c   Section        0  fsl_assert.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x000029c8   Section        0  fsl_assert.o(.text.fsl_assert_hook)
    [Anonymous Symbol]                       0x000029cc   Section        0  continuous_sram_address.o(.text.main)
    i.__scatterload_copy                     0x00003014   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00003022   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00003024   Section       14  handlers.o(i.__scatterload_zeroinit)
    .Lswitch.table.CLOCK_GetFlexcanClkFreq   0x00003034   Data          32  fsl_clock.o(.rodata.cst32)
    s_LpuartAdapterBase                      0x00003054   Data          20  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    [Anonymous Symbol]                       0x00003054   Section        0  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    s_lpuartBases                            0x00003068   Data          20  fsl_lpuart.o(.rodata.s_lpuartBases)
    [Anonymous Symbol]                       0x00003068   Section        0  fsl_lpuart.o(.rodata.s_lpuartBases)
    s_lpuartClock                            0x0000307c   Data          20  fsl_lpuart.o(.rodata.s_lpuartClock)
    [Anonymous Symbol]                       0x0000307c   Section        0  fsl_lpuart.o(.rodata.s_lpuartClock)
    s_lpuartResets                           0x00003090   Data          10  fsl_lpuart.o(.rodata.s_lpuartResets)
    [Anonymous Symbol]                       0x00003090   Section        0  fsl_lpuart.o(.rodata.s_lpuartResets)
    .L.str.3                                 0x0000309a   Data          78  fsl_adapter_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000309a   Section        0  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x000030e8   Data          12  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x000030f4   Data          13  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.9                                 0x000030f4   Data          13  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x00003101   Data          36  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str                                   0x00003125   Data          15  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x00003134   Data          20  fsl_clock.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003134   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str                                   0x00003148   Data          26  fsl_clock.o(.rodata.str1.1)
    .L.str.2                                 0x00003162   Data          26  fsl_clock.o(.rodata.str1.1)
    .L.str                                   0x0000317c   Data          37  fsl_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000317c   Section        0  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x000031a1   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str                                   0x000031b6   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x000031b6   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x000031b6   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x000031c5   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x0000320c   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x00003253   Data          20  fsl_reset.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003253   Section        0  fsl_reset.o(.rodata.str1.1)
    .L.str.8                                 0x00003262   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x00003267   Data          14  fsl_reset.o(.rodata.str1.1)
    .L.str                                   0x00003275   Data          13  fsl_reset.o(.rodata.str1.1)
    .L.str.11                                0x0000327c   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str                                   0x00003282   Data          15  fsl_spc.o(.rodata.str1.1)
    .L.str                                   0x00003282   Data          15  fsl_spc.o(.rodata.str1.1)
    .L.str.2                                 0x00003282   Data          15  fsl_spc.o(.rodata.str1.1)
    .L.str.4                                 0x00003282   Data          15  fsl_spc.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003282   Section        0  fsl_spc.o(.rodata.str1.1)
    .L.str.13                                0x00003289   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x00003291   Data          18  fsl_spc.o(.rodata.str1.1)
    .L.str.14                                0x0000329e   Data          14  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x000032a3   Data          18  fsl_cmc.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000032a3   Section        0  fsl_cmc.o(.rodata.str1.1)
    .L.str.22                                0x000032b5   Data          79  fsl_edma.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000032b5   Section        0  fsl_edma.o(.rodata.str1.1)
    .L.str.23                                0x00003304   Data          83  fsl_edma.o(.rodata.str1.1)
    .L.str.6                                 0x00003326   Data          67  fsl_edma.o(.rodata.str1.1)
    .L.str                                   0x00003357   Data          61  fsl_edma.o(.rodata.str1.1)
    .L.str.40                                0x00003394   Data          35  fsl_edma.o(.rodata.str1.1)
    .L.str.2                                 0x000033b7   Data          12  fsl_edma.o(.rodata.str1.1)
    .L.str.18                                0x000033c3   Data          15  fsl_edma.o(.rodata.str1.1)
    .L.str.20                                0x000033d2   Data          16  fsl_edma.o(.rodata.str1.1)
    .L.str.21                                0x000033e2   Data          17  fsl_edma.o(.rodata.str1.1)
    .L.str.8                                 0x000033f3   Data          17  fsl_edma.o(.rodata.str1.1)
    .L.str.13                                0x00003404   Data          75  fsl_edma.o(.rodata.str1.1)
    .L.str.9                                 0x0000344f   Data          82  fsl_edma.o(.rodata.str1.1)
    .L.str.11                                0x000034a1   Data          87  fsl_edma.o(.rodata.str1.1)
    .L.str.14                                0x000034f8   Data          77  fsl_edma.o(.rodata.str1.1)
    .L.str.10                                0x00003545   Data          83  fsl_edma.o(.rodata.str1.1)
    .L.str.12                                0x00003598   Data          89  fsl_edma.o(.rodata.str1.1)
    .L.str.15                                0x000035f1   Data          73  fsl_edma.o(.rodata.str1.1)
    .L.str.17                                0x00003618   Data          58  fsl_edma.o(.rodata.str1.1)
    .L.str.16                                0x0000363a   Data          74  fsl_edma.o(.rodata.str1.1)
    .L.str.7                                 0x00003684   Data          30  fsl_edma.o(.rodata.str1.1)
    .L.str.24                                0x000036a2   Data          41  fsl_edma.o(.rodata.str1.1)
    .L.str.1                                 0x000036cb   Data          19  fsl_edma.o(.rodata.str1.1)
    .L.str.2                                 0x000036de   Data           6  fsl_edma.o(.rodata.str1.1)
    .L.str.3                                 0x000036de   Data           6  fsl_edma.o(.rodata.str1.1)
    .L.str.1                                 0x000036e4   Data          20  fsl_lptmr.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000036e4   Section        0  fsl_lptmr.o(.rodata.str1.1)
    .L.str.1                                 0x000036f8   Data          18  fsl_wuu.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000036f8   Section        0  fsl_wuu.o(.rodata.str1.1)
    .L.str.8                                 0x0000370a   Data           4  continuous_sram_address.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000370a   Section        0  continuous_sram_address.o(.rodata.str1.1)
    .L.str.5                                 0x0000370e   Data          93  continuous_sram_address.o(.rodata.str1.1)
    .L.str.27                                0x0000374d   Data         157  fsl_edma.o(.rodata.str1.1)
    .L.str.6                                 0x0000376b   Data          54  continuous_sram_address.o(.rodata.str1.1)
    .L.str.18                                0x000037a1   Data          60  continuous_sram_address.o(.rodata.str1.1)
    .L.str                                   0x000037dd   Data          93  continuous_sram_address.o(.rodata.str1.1)
    .L.str.28                                0x000037ea   Data         161  fsl_edma.o(.rodata.str1.1)
    .L.str.21                                0x0000383a   Data          30  continuous_sram_address.o(.rodata.str1.1)
    .L.str.16                                0x00003858   Data          50  continuous_sram_address.o(.rodata.str1.1)
    .L.str.22                                0x0000388a   Data          74  continuous_sram_address.o(.rodata.str1.1)
    .L.str.31                                0x0000388b   Data          64  fsl_edma.o(.rodata.str1.1)
    .L.str.32                                0x000038cb   Data          65  fsl_edma.o(.rodata.str1.1)
    .L.str.19                                0x000038d4   Data          61  continuous_sram_address.o(.rodata.str1.1)
    .L.str.33                                0x0000390c   Data          67  fsl_edma.o(.rodata.str1.1)
    .L.str.20                                0x00003911   Data          37  continuous_sram_address.o(.rodata.str1.1)
    .L.str.14                                0x00003936   Data          50  continuous_sram_address.o(.rodata.str1.1)
    .L.str.34                                0x0000394f   Data          69  fsl_edma.o(.rodata.str1.1)
    .L.str.29                                0x00003968   Data          45  continuous_sram_address.o(.rodata.str1.1)
    .L.str.35                                0x00003994   Data          77  fsl_edma.o(.rodata.str1.1)
    .L.str.9                                 0x00003995   Data          21  continuous_sram_address.o(.rodata.str1.1)
    .L.str.17                                0x00003997   Data          19  continuous_sram_address.o(.rodata.str1.1)
    .L.str.10                                0x000039aa   Data          21  continuous_sram_address.o(.rodata.str1.1)
    .L.str.24                                0x000039ac   Data          19  continuous_sram_address.o(.rodata.str1.1)
    .L.str.11                                0x000039bf   Data          24  continuous_sram_address.o(.rodata.str1.1)
    .L.str.15                                0x000039c1   Data          22  continuous_sram_address.o(.rodata.str1.1)
    .L.str.12                                0x000039d7   Data          32  continuous_sram_address.o(.rodata.str1.1)
    .L.str.36                                0x000039e1   Data          79  fsl_edma.o(.rodata.str1.1)
    .L.str.1                                 0x000039f7   Data          37  continuous_sram_address.o(.rodata.str1.1)
    .L.str.23                                0x00003a1c   Data          17  continuous_sram_address.o(.rodata.str1.1)
    .L.str.3                                 0x00003a2d   Data          30  continuous_sram_address.o(.rodata.str1.1)
    .L.str.37                                0x00003a30   Data          24  fsl_edma.o(.rodata.str1.1)
    .L.str.2                                 0x00003a4b   Data          25  continuous_sram_address.o(.rodata.str1.1)
    s_Ext_Clk_Freq                           0x20000008   Data           4  fsl_clock.o(.data.s_Ext_Clk_Freq)
    [Anonymous Symbol]                       0x20000008   Section        0  fsl_clock.o(.data.s_Ext_Clk_Freq)
    s_EDMAHandle                             0x20000034   Data          32  fsl_edma.o(.bss.s_EDMAHandle)
    [Anonymous Symbol]                       0x20000034   Section        0  fsl_edma.o(.bss.s_EDMAHandle)
    s_debugConsole                           0x20000054   Data          20  fsl_debug_console.o(.bss.s_debugConsole)
    [Anonymous Symbol]                       0x20000054   Section        0  fsl_debug_console.o(.bss.s_debugConsole)
    VTOR                                     0xe000ed08   Number         0  startup_mcxa156.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$8M$VFPi5$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Number       420  startup_mcxa156.o(.isr_vector)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x00000201   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000201   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x00000205   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000209   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000209   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000209   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000209   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000211   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000211   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000215   Thumb Code    64  startup_mcxa156.o(.text)
    ADC0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    ADC1_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    BusFault_Handler                         0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CAN0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CDOG0_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CMC_DriverIRQHandler                     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CMP0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CMP1_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER0_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER1_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER2_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER3_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER4_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    DAC0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    DebugMon_Handler                         0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    DefaultISR                               0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    ERM0_MULTI_BIT_DriverIRQHandler          0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    ERM0_SINGLE_BIT_DriverIRQHandler         0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXIO_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_FAULT_DriverIRQHandler          0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_RELOAD_ERROR_DriverIRQHandler   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_SUBMODULE0_DriverIRQHandler     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_SUBMODULE1_DriverIRQHandler     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_SUBMODULE2_DriverIRQHandler     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_FAULT_DriverIRQHandler          0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_RELOAD_ERROR_DriverIRQHandler   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_SUBMODULE0_DriverIRQHandler     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_SUBMODULE1_DriverIRQHandler     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_SUBMODULE2_DriverIRQHandler     0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FMU0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    FREQME0_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    GLIKEY0_DriverIRQHandler                 0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO0_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO1_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO2_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO3_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO4_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    I3C0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C0_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C1_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C2_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C3_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPSPI0_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPSPI1_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    LPTMR0_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    MBC0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    MemManage_Handler                        0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    OS_EVENT_DriverIRQHandler                0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_COMPARE_DriverIRQHandler            0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_HOME_DriverIRQHandler               0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_INDEX_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_WATCHDOG_DriverIRQHandler           0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_COMPARE_DriverIRQHandler            0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_HOME_DriverIRQHandler               0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_INDEX_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_WATCHDOG_DriverIRQHandler           0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved100_DriverIRQHandler             0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved16_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved36_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved37_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved38_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved41_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved46_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved53_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved65_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved72_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved77_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved82_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved84_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved85_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved86_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved92_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    SCG0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    SPC0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    SecureFault_Handler                      0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    USB0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    UTICK0_DriverIRQHandler                  0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    UsageFault_Handler                       0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    VBAT0_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    WAKETIMER0_DriverIRQHandler              0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    WUU0_DriverIRQHandler                    0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    WWDT0_DriverIRQHandler                   0x00000255   Thumb Code     4  startup_mcxa156.o(.text)
    NMI_Handler                              0x00000259   Thumb Code     4  startup_mcxa156.o(.text)
    HardFault_Handler                        0x0000025d   Thumb Code     4  startup_mcxa156.o(.text)
    SVC_Handler                              0x00000261   Thumb Code     4  startup_mcxa156.o(.text)
    PendSV_Handler                           0x00000265   Thumb Code     4  startup_mcxa156.o(.text)
    SysTick_Handler                          0x00000269   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved16_IRQHandler                    0x0000026d   Thumb Code     4  startup_mcxa156.o(.text)
    CMC_IRQHandler                           0x00000271   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH1_IRQHandler                       0x00000279   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH2_IRQHandler                       0x0000027d   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH3_IRQHandler                       0x00000281   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH4_IRQHandler                       0x00000285   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH5_IRQHandler                       0x00000289   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH6_IRQHandler                       0x0000028d   Thumb Code     4  startup_mcxa156.o(.text)
    DMA_CH7_IRQHandler                       0x00000291   Thumb Code     4  startup_mcxa156.o(.text)
    ERM0_SINGLE_BIT_IRQHandler               0x00000295   Thumb Code     4  startup_mcxa156.o(.text)
    ERM0_MULTI_BIT_IRQHandler                0x00000299   Thumb Code     4  startup_mcxa156.o(.text)
    FMU0_IRQHandler                          0x0000029d   Thumb Code     4  startup_mcxa156.o(.text)
    GLIKEY0_IRQHandler                       0x000002a1   Thumb Code     4  startup_mcxa156.o(.text)
    MBC0_IRQHandler                          0x000002a5   Thumb Code     4  startup_mcxa156.o(.text)
    SCG0_IRQHandler                          0x000002a9   Thumb Code     4  startup_mcxa156.o(.text)
    SPC0_IRQHandler                          0x000002ad   Thumb Code     4  startup_mcxa156.o(.text)
    VBAT0_IRQHandler                         0x000002b1   Thumb Code     4  startup_mcxa156.o(.text)
    WUU0_IRQHandler                          0x000002b5   Thumb Code     4  startup_mcxa156.o(.text)
    CAN0_IRQHandler                          0x000002b9   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved36_IRQHandler                    0x000002bd   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved37_IRQHandler                    0x000002c1   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved38_IRQHandler                    0x000002c5   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXIO_IRQHandler                        0x000002c9   Thumb Code     4  startup_mcxa156.o(.text)
    I3C0_IRQHandler                          0x000002cd   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved41_IRQHandler                    0x000002d1   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C0_IRQHandler                        0x000002d5   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C1_IRQHandler                        0x000002d9   Thumb Code     4  startup_mcxa156.o(.text)
    LPSPI0_IRQHandler                        0x000002dd   Thumb Code     4  startup_mcxa156.o(.text)
    LPSPI1_IRQHandler                        0x000002e1   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved46_IRQHandler                    0x000002e5   Thumb Code     4  startup_mcxa156.o(.text)
    LPUART0_IRQHandler                       0x000002e9   Thumb Code     4  startup_mcxa156.o(.text)
    LPUART1_IRQHandler                       0x000002ed   Thumb Code     4  startup_mcxa156.o(.text)
    LPUART2_IRQHandler                       0x000002f1   Thumb Code     4  startup_mcxa156.o(.text)
    LPUART3_IRQHandler                       0x000002f5   Thumb Code     4  startup_mcxa156.o(.text)
    LPUART4_IRQHandler                       0x000002f9   Thumb Code     4  startup_mcxa156.o(.text)
    USB0_IRQHandler                          0x000002fd   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved53_IRQHandler                    0x00000301   Thumb Code     4  startup_mcxa156.o(.text)
    CDOG0_IRQHandler                         0x00000305   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER0_IRQHandler                       0x00000309   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER1_IRQHandler                       0x0000030d   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER2_IRQHandler                       0x00000311   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER3_IRQHandler                       0x00000315   Thumb Code     4  startup_mcxa156.o(.text)
    CTIMER4_IRQHandler                       0x00000319   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_RELOAD_ERROR_IRQHandler         0x0000031d   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_FAULT_IRQHandler                0x00000321   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_SUBMODULE0_IRQHandler           0x00000325   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_SUBMODULE1_IRQHandler           0x00000329   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM0_SUBMODULE2_IRQHandler           0x0000032d   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved65_IRQHandler                    0x00000331   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_COMPARE_IRQHandler                  0x00000335   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_HOME_IRQHandler                     0x00000339   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_WATCHDOG_IRQHandler                 0x0000033d   Thumb Code     4  startup_mcxa156.o(.text)
    QDC0_INDEX_IRQHandler                    0x00000341   Thumb Code     4  startup_mcxa156.o(.text)
    FREQME0_IRQHandler                       0x00000345   Thumb Code     4  startup_mcxa156.o(.text)
    LPTMR0_IRQHandler                        0x00000349   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved72_IRQHandler                    0x0000034d   Thumb Code     4  startup_mcxa156.o(.text)
    OS_EVENT_IRQHandler                      0x00000351   Thumb Code     4  startup_mcxa156.o(.text)
    WAKETIMER0_IRQHandler                    0x00000355   Thumb Code     4  startup_mcxa156.o(.text)
    UTICK0_IRQHandler                        0x00000359   Thumb Code     4  startup_mcxa156.o(.text)
    WWDT0_IRQHandler                         0x0000035d   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved77_IRQHandler                    0x00000361   Thumb Code     4  startup_mcxa156.o(.text)
    ADC0_IRQHandler                          0x00000365   Thumb Code     4  startup_mcxa156.o(.text)
    ADC1_IRQHandler                          0x00000369   Thumb Code     4  startup_mcxa156.o(.text)
    CMP0_IRQHandler                          0x0000036d   Thumb Code     4  startup_mcxa156.o(.text)
    CMP1_IRQHandler                          0x00000371   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved82_IRQHandler                    0x00000375   Thumb Code     4  startup_mcxa156.o(.text)
    DAC0_IRQHandler                          0x00000379   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved84_IRQHandler                    0x0000037d   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved85_IRQHandler                    0x00000381   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved86_IRQHandler                    0x00000385   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO0_IRQHandler                         0x00000389   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO1_IRQHandler                         0x0000038d   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO2_IRQHandler                         0x00000391   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO3_IRQHandler                         0x00000395   Thumb Code     4  startup_mcxa156.o(.text)
    GPIO4_IRQHandler                         0x00000399   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved92_IRQHandler                    0x0000039d   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C2_IRQHandler                        0x000003a1   Thumb Code     4  startup_mcxa156.o(.text)
    LPI2C3_IRQHandler                        0x000003a5   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_RELOAD_ERROR_IRQHandler         0x000003a9   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_FAULT_IRQHandler                0x000003ad   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_SUBMODULE0_IRQHandler           0x000003b1   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_SUBMODULE1_IRQHandler           0x000003b5   Thumb Code     4  startup_mcxa156.o(.text)
    FLEXPWM1_SUBMODULE2_IRQHandler           0x000003b9   Thumb Code     4  startup_mcxa156.o(.text)
    Reserved100_IRQHandler                   0x000003bd   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_COMPARE_IRQHandler                  0x000003c1   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_HOME_IRQHandler                     0x000003c5   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_WATCHDOG_IRQHandler                 0x000003c9   Thumb Code     4  startup_mcxa156.o(.text)
    QDC1_INDEX_IRQHandler                    0x000003cd   Thumb Code     4  startup_mcxa156.o(.text)
    ___aeabi_memcpy4$ret                     0x00000549   Thumb Code     0  memcpy.o(.text)
    ___aeabi_memcpy8$ret                     0x00000549   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x00000549   Thumb Code    40  memcpy.o(.text)
    memcpy                                   0x00000549   Thumb Code     0  memcpy.o(.text)
    memset                                   0x00000571   Thumb Code    18  memset.o(.text)
    strlen                                   0x00000583   Thumb Code    14  strlen.o(.text)
    __scatterload                            0x00000591   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000591   Thumb Code     0  init.o(.text)
    BOARD_BootClockFRO48M                    0x000005b5   Thumb Code   178  clock_config.o(.text.BOARD_BootClockFRO48M)
    BOARD_BootClockFRO96M                    0x00000669   Thumb Code   178  clock_config.o(.text.BOARD_BootClockFRO96M)
    BOARD_InitBootClocks                     0x0000071d   Thumb Code     4  clock_config.o(.text.BOARD_InitBootClocks)
    BOARD_InitDebugConsole                   0x00000721   Thumb Code    50  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x00000755   Thumb Code    70  pin_mux.o(.text.BOARD_InitPins)
    CLOCK_AttachClk                          0x0000079d   Thumb Code   114  fsl_clock.o(.text.CLOCK_AttachClk)
    CLOCK_GetCoreSysClkFreq                  0x00000811   Thumb Code   172  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    CLOCK_SetClockDiv                        0x000008bd   Thumb Code    86  fsl_clock.o(.text.CLOCK_SetClockDiv)
    CLOCK_SetupFRO12MClocking                0x00000915   Thumb Code    42  fsl_clock.o(.text.CLOCK_SetupFRO12MClocking)
    CLOCK_SetupFRO16KClocking                0x00000941   Thumb Code    38  fsl_clock.o(.text.CLOCK_SetupFRO16KClocking)
    CLOCK_SetupFROHFClocking                 0x00000969   Thumb Code   158  fsl_clock.o(.text.CLOCK_SetupFROHFClocking)
    CMC_ConfigFlashMode                      0x00000a09   Thumb Code    18  fsl_cmc.o(.text.CMC_ConfigFlashMode)
    CMC_EnterLowPowerMode                    0x00000a1d   Thumb Code   168  fsl_cmc.o(.text.CMC_EnterLowPowerMode)
    CMC_SetPowerModeProtection               0x00000ac5   Thumb Code    12  fsl_cmc.o(.text.CMC_SetPowerModeProtection)
    DMA_CH0_DriverIRQHandler                 0x00000ad1   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH0_DriverIRQHandler)
    DMA_CH0_IRQHandler                       0x00000ad9   Thumb Code    46  continuous_sram_address.o(.text.DMA_CH0_IRQHandler)
    DMA_CH1_DriverIRQHandler                 0x00000b09   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH1_DriverIRQHandler)
    DMA_CH2_DriverIRQHandler                 0x00000b11   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH2_DriverIRQHandler)
    DMA_CH3_DriverIRQHandler                 0x00000b19   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH3_DriverIRQHandler)
    DMA_CH4_DriverIRQHandler                 0x00000b21   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH4_DriverIRQHandler)
    DMA_CH5_DriverIRQHandler                 0x00000b29   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH5_DriverIRQHandler)
    DMA_CH6_DriverIRQHandler                 0x00000b31   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH6_DriverIRQHandler)
    DMA_CH7_DriverIRQHandler                 0x00000b39   Thumb Code     8  fsl_edma_soc.o(.text.DMA_CH7_DriverIRQHandler)
    DbgConsole_Deinit                        0x00000b41   Thumb Code    28  fsl_debug_console.o(.text.DbgConsole_Deinit)
    DbgConsole_Getchar                       0x00000b5d   Thumb Code    44  fsl_debug_console.o(.text.DbgConsole_Getchar)
    DbgConsole_Init                          0x00000b89   Thumb Code    82  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x00000bdd   Thumb Code    32  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_Vprintf                       0x00000bfd   Thumb Code  1030  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    EDMA_ClearChannelStatusFlags             0x00001005   Thumb Code    98  fsl_edma.o(.text.EDMA_ClearChannelStatusFlags)
    EDMA_ConfigChannelSoftwareTCDExt         0x00001069   Thumb Code   632  fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCDExt)
    EDMA_DriverIRQHandler                    0x000012e1   Thumb Code    38  fsl_edma.o(.text.EDMA_DriverIRQHandler)
    EDMA_GetChannelStatusFlags               0x00001309   Thumb Code    68  fsl_edma.o(.text.EDMA_GetChannelStatusFlags)
    EDMA_GetDefaultConfig                    0x0000134d   Thumb Code    54  fsl_edma.o(.text.EDMA_GetDefaultConfig)
    EDMA_HandleIRQ                           0x00001385   Thumb Code   222  fsl_edma.o(.text.EDMA_HandleIRQ)
    EDMA_Init                                0x00001465   Thumb Code   316  fsl_edma.o(.text.EDMA_Init)
    EDMA_PrepareTransfer                     0x000015a1   Thumb Code   124  fsl_edma.o(.text.EDMA_PrepareTransfer)
    EDMA_PrepareTransferConfig               0x0000161d   Thumb Code   756  fsl_edma.o(.text.EDMA_PrepareTransferConfig)
    EDMA_SetTransferConfig                   0x00001979   Thumb Code   152  fsl_edma.o(.text.EDMA_SetTransferConfig)
    HAL_UartDeinit                           0x00001a11   Thumb Code    50  fsl_adapter_lpuart.o(.text.HAL_UartDeinit)
    HAL_UartInit                             0x00001a45   Thumb Code   244  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    HAL_UartReceiveBlocking                  0x00001b4d   Thumb Code   108  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    HAL_UartSendBlocking                     0x00001bb9   Thumb Code   102  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    LPTMR_GetDefaultConfig                   0x00001c21   Thumb Code    50  fsl_lptmr.o(.text.LPTMR_GetDefaultConfig)
    LPTMR_Init                               0x00001c55   Thumb Code    88  fsl_lptmr.o(.text.LPTMR_Init)
    LPUART0_DriverIRQHandler                 0x00001cad   Thumb Code    30  fsl_lpuart.o(.text.LPUART0_DriverIRQHandler)
    LPUART1_DriverIRQHandler                 0x00001ccd   Thumb Code    28  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    LPUART2_DriverIRQHandler                 0x00001ce9   Thumb Code    30  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    LPUART3_DriverIRQHandler                 0x00001d09   Thumb Code    30  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    LPUART4_DriverIRQHandler                 0x00001d29   Thumb Code    30  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    LPUART_Deinit                            0x00001d49   Thumb Code   232  fsl_lpuart.o(.text.LPUART_Deinit)
    LPUART_GetDefaultConfig                  0x00001e31   Thumb Code    58  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    LPUART_GetStatusFlags                    0x00001e6d   Thumb Code    24  fsl_lpuart.o(.text.LPUART_GetStatusFlags)
    LPUART_Init                              0x00001e85   Thumb Code   848  fsl_lpuart.o(.text.LPUART_Init)
    LPUART_ReadBlocking                      0x000021f1   Thumb Code   288  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    LPUART_WriteBlocking                     0x00002311   Thumb Code    54  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    RESET_PeripheralReset                    0x00002349   Thumb Code   250  fsl_reset.o(.text.RESET_PeripheralReset)
    RESET_SetPeripheralReset                 0x00002445   Thumb Code   148  fsl_reset.o(.text.RESET_SetPeripheralReset)
    SPC_EnableActiveModeCoreLowVoltageDetect 0x000024d9   Thumb Code    22  fsl_spc.o(.text.SPC_EnableActiveModeCoreLowVoltageDetect)
    SPC_EnableActiveModeSystemHighVoltageDetect 0x000024f1   Thumb Code    22  fsl_spc.o(.text.SPC_EnableActiveModeSystemHighVoltageDetect)
    SPC_EnableActiveModeSystemLowVoltageDetect 0x00002509   Thumb Code    22  fsl_spc.o(.text.SPC_EnableActiveModeSystemLowVoltageDetect)
    SPC_SetActiveModeCoreLDORegulatorConfig  0x00002521   Thumb Code   204  fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig)
    SPC_SetActiveModeRegulatorsConfig        0x000025fd   Thumb Code   108  fsl_spc.o(.text.SPC_SetActiveModeRegulatorsConfig)
    SPC_SetLowPowerModeRegulatorsConfig      0x00002669   Thumb Code   194  fsl_spc.o(.text.SPC_SetLowPowerModeRegulatorsConfig)
    SPC_SetLowPowerRequestConfig             0x0000272d   Thumb Code    60  fsl_spc.o(.text.SPC_SetLowPowerRequestConfig)
    SPC_SetSRAMOperateVoltage                0x00002769   Thumb Code    68  fsl_spc.o(.text.SPC_SetSRAMOperateVoltage)
    SystemInit                               0x000027ad   Thumb Code   270  system_mcxa156.o(.text.SystemInit)
    SystemInitHook                           0x000028bd   Thumb Code     2  system_mcxa156.o(.text.SystemInitHook)
    WUU_SetExternalWakeUpPinsConfig          0x000028c1   Thumb Code   140  fsl_wuu.o(.text.WUU_SetExternalWakeUpPinsConfig)
    WUU_SetInternalWakeUpModulesConfig       0x0000294d   Thumb Code    48  fsl_wuu.o(.text.WUU_SetInternalWakeUpModulesConfig)
    __aeabi_assert                           0x0000297d   Thumb Code    32  fsl_assert.o(.text.__aeabi_assert)
    fsl_assert_hook                          0x000029c9   Thumb Code     4  fsl_assert.o(.text.fsl_assert_hook)
    main                                     0x000029cd   Thumb Code  1464  continuous_sram_address.o(.text.main)
    __scatterload_copy                       0x00003015   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00003023   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00003025   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00003a64   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003a84   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_mcxa156.o(.data.SystemCoreClock)
    p_destBuf                                0x20000004   Data           4  continuous_sram_address.o(.data.p_destBuf)
    s_lpuartIsr                              0x2000000c   Data          20  fsl_lpuart.o(.data.s_lpuartIsr)
    srcBuf1                                  0x20000020   Data          16  continuous_sram_address.o(.data.srcBuf1)
    g_Transfer_Done                          0x20000030   Data           1  continuous_sram_address.o(.bss.g_Transfer_Done)
    s_lpuartHandle                           0x20000068   Data          20  fsl_lpuart.o(.bss.s_lpuartHandle)
    srcBuf2                                  0x2000007c   Data          16  continuous_sram_address.o(.bss.srcBuf2)
    srcBuf3                                  0x2000008c   Data          16  continuous_sram_address.o(.bss.srcBuf3)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x2000009c   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x2000049c   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Base           0x2001fc00   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20020000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000215

  Load Region LR_m_text (Base: 0x00000000, Size: 0x00003ab4, Max: 0x00100000, ABSOLUTE)

    Execution Region VECTOR_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000001a4, Max: 0x00000200, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000001a4   Data   RO          621    .isr_vector         startup_mcxa156.o


    Execution Region ER_m_text (Exec base: 0x00000200, Load base: 0x00000200, Size: 0x00003884, Max: 0x000ffe00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000200   0x00000200   0x00000000   Code   RO          677  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000200   0x00000200   0x00000004   Code   RO          729    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x00000204   0x00000204   0x00000004   Code   RO          732    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000208   0x00000208   0x00000000   Code   RO          734    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000208   0x00000208   0x00000000   Code   RO          736    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000208   0x00000208   0x00000008   Code   RO          737    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000210   0x00000210   0x00000000   Code   RO          739    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000210   0x00000210   0x00000000   Code   RO          741    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000210   0x00000210   0x00000004   Code   RO          730    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x00000214   0x00000214   0x00000334   Code   RO          620  * .text               startup_mcxa156.o
    0x00000548   0x00000548   0x00000028   Code   RO          682    .text               mc_w.l(memcpy.o)
    0x00000570   0x00000570   0x00000012   Code   RO          684    .text               mc_w.l(memset.o)
    0x00000582   0x00000582   0x0000000e   Code   RO          688    .text               mc_w.l(strlen.o)
    0x00000590   0x00000590   0x00000024   Code   RO          783    .text               mc_w.l(init.o)
    0x000005b4   0x000005b4   0x000000b2   Code   RO           20    .text.BOARD_BootClockFRO48M  clock_config.o
    0x00000666   0x00000666   0x00000002   PAD
    0x00000668   0x00000668   0x000000b2   Code   RO           14    .text.BOARD_BootClockFRO96M  clock_config.o
    0x0000071a   0x0000071a   0x00000002   PAD
    0x0000071c   0x0000071c   0x00000004   Code   RO           12    .text.BOARD_InitBootClocks  clock_config.o
    0x00000720   0x00000720   0x00000032   Code   RO            4    .text.BOARD_InitDebugConsole  board.o
    0x00000752   0x00000752   0x00000002   PAD
    0x00000754   0x00000754   0x00000046   Code   RO           34    .text.BOARD_InitPins  pin_mux.o
    0x0000079a   0x0000079a   0x00000002   PAD
    0x0000079c   0x0000079c   0x00000072   Code   RO          113    .text.CLOCK_AttachClk  fsl_clock.o
    0x0000080e   0x0000080e   0x00000002   PAD
    0x00000810   0x00000810   0x000000ac   Code   RO          141    .text.CLOCK_GetCoreSysClkFreq  fsl_clock.o
    0x000008bc   0x000008bc   0x00000056   Code   RO          121    .text.CLOCK_SetClockDiv  fsl_clock.o
    0x00000912   0x00000912   0x00000002   PAD
    0x00000914   0x00000914   0x0000002a   Code   RO          129    .text.CLOCK_SetupFRO12MClocking  fsl_clock.o
    0x0000093e   0x0000093e   0x00000002   PAD
    0x00000940   0x00000940   0x00000026   Code   RO          131    .text.CLOCK_SetupFRO16KClocking  fsl_clock.o
    0x00000966   0x00000966   0x00000002   PAD
    0x00000968   0x00000968   0x0000009e   Code   RO          127    .text.CLOCK_SetupFROHFClocking  fsl_clock.o
    0x00000a06   0x00000a06   0x00000002   PAD
    0x00000a08   0x00000a08   0x00000012   Code   RO          402    .text.CMC_ConfigFlashMode  fsl_cmc.o
    0x00000a1a   0x00000a1a   0x00000002   PAD
    0x00000a1c   0x00000a1c   0x000000a8   Code   RO          410    .text.CMC_EnterLowPowerMode  fsl_cmc.o
    0x00000ac4   0x00000ac4   0x0000000c   Code   RO          398    .text.CMC_SetPowerModeProtection  fsl_cmc.o
    0x00000ad0   0x00000ad0   0x00000008   Code   RO          532    .text.DMA_CH0_DriverIRQHandler  fsl_edma_soc.o
    0x00000ad8   0x00000ad8   0x0000002e   Code   RO          597    .text.DMA_CH0_IRQHandler  continuous_sram_address.o
    0x00000b06   0x00000b06   0x00000002   PAD
    0x00000b08   0x00000b08   0x00000008   Code   RO          534    .text.DMA_CH1_DriverIRQHandler  fsl_edma_soc.o
    0x00000b10   0x00000b10   0x00000008   Code   RO          536    .text.DMA_CH2_DriverIRQHandler  fsl_edma_soc.o
    0x00000b18   0x00000b18   0x00000008   Code   RO          538    .text.DMA_CH3_DriverIRQHandler  fsl_edma_soc.o
    0x00000b20   0x00000b20   0x00000008   Code   RO          540    .text.DMA_CH4_DriverIRQHandler  fsl_edma_soc.o
    0x00000b28   0x00000b28   0x00000008   Code   RO          542    .text.DMA_CH5_DriverIRQHandler  fsl_edma_soc.o
    0x00000b30   0x00000b30   0x00000008   Code   RO          544    .text.DMA_CH6_DriverIRQHandler  fsl_edma_soc.o
    0x00000b38   0x00000b38   0x00000008   Code   RO          546    .text.DMA_CH7_DriverIRQHandler  fsl_edma_soc.o
    0x00000b40   0x00000b40   0x0000001c   Code   RO          641    .text.DbgConsole_Deinit  fsl_debug_console.o
    0x00000b5c   0x00000b5c   0x0000002c   Code   RO          655    .text.DbgConsole_Getchar  fsl_debug_console.o
    0x00000b88   0x00000b88   0x00000052   Code   RO          639    .text.DbgConsole_Init  fsl_debug_console.o
    0x00000bda   0x00000bda   0x00000002   PAD
    0x00000bdc   0x00000bdc   0x00000020   Code   RO          647    .text.DbgConsole_Printf  fsl_debug_console.o
    0x00000bfc   0x00000bfc   0x00000406   Code   RO          649    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x00001002   0x00001002   0x00000002   PAD
    0x00001004   0x00001004   0x00000062   Code   RO          436    .text.EDMA_ClearChannelStatusFlags  fsl_edma.o
    0x00001066   0x00001066   0x00000002   PAD
    0x00001068   0x00001068   0x00000278   Code   RO          456    .text.EDMA_ConfigChannelSoftwareTCDExt  fsl_edma.o
    0x000012e0   0x000012e0   0x00000026   Code   RO          520    .text.EDMA_DriverIRQHandler  fsl_edma.o
    0x00001306   0x00001306   0x00000002   PAD
    0x00001308   0x00001308   0x00000044   Code   RO          492    .text.EDMA_GetChannelStatusFlags  fsl_edma.o
    0x0000134c   0x0000134c   0x00000036   Code   RO          432    .text.EDMA_GetDefaultConfig  fsl_edma.o
    0x00001382   0x00001382   0x00000002   PAD
    0x00001384   0x00001384   0x000000de   Code   RO          518    .text.EDMA_HandleIRQ  fsl_edma.o
    0x00001462   0x00001462   0x00000002   PAD
    0x00001464   0x00001464   0x0000013c   Code   RO          424    .text.EDMA_Init     fsl_edma.o
    0x000015a0   0x000015a0   0x0000007c   Code   RO          502    .text.EDMA_PrepareTransfer  fsl_edma.o
    0x0000161c   0x0000161c   0x0000035c   Code   RO          500    .text.EDMA_PrepareTransferConfig  fsl_edma.o
    0x00001978   0x00001978   0x00000098   Code   RO          440    .text.EDMA_SetTransferConfig  fsl_edma.o
    0x00001a10   0x00001a10   0x00000032   Code   RO           78    .text.HAL_UartDeinit  fsl_adapter_lpuart.o
    0x00001a42   0x00001a42   0x00000002   PAD
    0x00001a44   0x00001a44   0x00000108   Code   RO           76    .text.HAL_UartInit  fsl_adapter_lpuart.o
    0x00001b4c   0x00001b4c   0x0000006c   Code   RO           80    .text.HAL_UartReceiveBlocking  fsl_adapter_lpuart.o
    0x00001bb8   0x00001bb8   0x00000066   Code   RO           82    .text.HAL_UartSendBlocking  fsl_adapter_lpuart.o
    0x00001c1e   0x00001c1e   0x00000002   PAD
    0x00001c20   0x00001c20   0x00000032   Code   RO          559    .text.LPTMR_GetDefaultConfig  fsl_lptmr.o
    0x00001c52   0x00001c52   0x00000002   PAD
    0x00001c54   0x00001c54   0x00000058   Code   RO          555    .text.LPTMR_Init    fsl_lptmr.o
    0x00001cac   0x00001cac   0x0000001e   Code   RO          299    .text.LPUART0_DriverIRQHandler  fsl_lpuart.o
    0x00001cca   0x00001cca   0x00000002   PAD
    0x00001ccc   0x00001ccc   0x0000001c   Code   RO          301    .text.LPUART1_DriverIRQHandler  fsl_lpuart.o
    0x00001ce8   0x00001ce8   0x0000001e   Code   RO          303    .text.LPUART2_DriverIRQHandler  fsl_lpuart.o
    0x00001d06   0x00001d06   0x00000002   PAD
    0x00001d08   0x00001d08   0x0000001e   Code   RO          305    .text.LPUART3_DriverIRQHandler  fsl_lpuart.o
    0x00001d26   0x00001d26   0x00000002   PAD
    0x00001d28   0x00001d28   0x0000001e   Code   RO          307    .text.LPUART4_DriverIRQHandler  fsl_lpuart.o
    0x00001d46   0x00001d46   0x00000002   PAD
    0x00001d48   0x00001d48   0x000000e8   Code   RO          249    .text.LPUART_Deinit  fsl_lpuart.o
    0x00001e30   0x00001e30   0x0000003a   Code   RO          251    .text.LPUART_GetDefaultConfig  fsl_lpuart.o
    0x00001e6a   0x00001e6a   0x00000002   PAD
    0x00001e6c   0x00001e6c   0x00000018   Code   RO          265    .text.LPUART_GetStatusFlags  fsl_lpuart.o
    0x00001e84   0x00001e84   0x0000036c   Code   RO          247    .text.LPUART_Init   fsl_lpuart.o
    0x000021f0   0x000021f0   0x00000120   Code   RO          273    .text.LPUART_ReadBlocking  fsl_lpuart.o
    0x00002310   0x00002310   0x00000036   Code   RO          269    .text.LPUART_WriteBlocking  fsl_lpuart.o
    0x00002346   0x00002346   0x00000002   PAD
    0x00002348   0x00002348   0x000000fa   Code   RO          328    .text.RESET_PeripheralReset  fsl_reset.o
    0x00002442   0x00002442   0x00000002   PAD
    0x00002444   0x00002444   0x00000094   Code   RO          324    .text.RESET_SetPeripheralReset  fsl_reset.o
    0x000024d8   0x000024d8   0x00000016   Code   RO          353    .text.SPC_EnableActiveModeCoreLowVoltageDetect  fsl_spc.o
    0x000024ee   0x000024ee   0x00000002   PAD
    0x000024f0   0x000024f0   0x00000016   Code   RO          361    .text.SPC_EnableActiveModeSystemHighVoltageDetect  fsl_spc.o
    0x00002506   0x00002506   0x00000002   PAD
    0x00002508   0x00002508   0x00000016   Code   RO          363    .text.SPC_EnableActiveModeSystemLowVoltageDetect  fsl_spc.o
    0x0000251e   0x0000251e   0x00000002   PAD
    0x00002520   0x00002520   0x000000dc   Code   RO          371    .text.SPC_SetActiveModeCoreLDORegulatorConfig  fsl_spc.o
    0x000025fc   0x000025fc   0x0000006c   Code   RO          383    .text.SPC_SetActiveModeRegulatorsConfig  fsl_spc.o
    0x00002668   0x00002668   0x000000c2   Code   RO          385    .text.SPC_SetLowPowerModeRegulatorsConfig  fsl_spc.o
    0x0000272a   0x0000272a   0x00000002   PAD
    0x0000272c   0x0000272c   0x0000003c   Code   RO          343    .text.SPC_SetLowPowerRequestConfig  fsl_spc.o
    0x00002768   0x00002768   0x00000044   Code   RO          345    .text.SPC_SetSRAMOperateVoltage  fsl_spc.o
    0x000027ac   0x000027ac   0x0000010e   Code   RO           98    .text.SystemInit    system_mcxa156.o
    0x000028ba   0x000028ba   0x00000002   PAD
    0x000028bc   0x000028bc   0x00000002   Code   RO          100    .text.SystemInitHook  system_mcxa156.o
    0x000028be   0x000028be   0x00000002   PAD
    0x000028c0   0x000028c0   0x0000008c   Code   RO          570    .text.WUU_SetExternalWakeUpPinsConfig  fsl_wuu.o
    0x0000294c   0x0000294c   0x00000030   Code   RO          574    .text.WUU_SetInternalWakeUpModulesConfig  fsl_wuu.o
    0x0000297c   0x0000297c   0x0000004c   Code   RO          629    .text.__aeabi_assert  fsl_assert.o
    0x000029c8   0x000029c8   0x00000004   Code   RO          627    .text.fsl_assert_hook  fsl_assert.o
    0x000029cc   0x000029cc   0x00000648   Code   RO          601    .text.main          continuous_sram_address.o
    0x00003014   0x00003014   0x0000000e   Code   RO          789    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00003022   0x00003022   0x00000002   Code   RO          790    i.__scatterload_null  mc_w.l(handlers.o)
    0x00003024   0x00003024   0x0000000e   Code   RO          791    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00003032   0x00003032   0x00000002   PAD
    0x00003034   0x00003034   0x00000020   Data   RO          187    .rodata.cst32       fsl_clock.o
    0x00003054   0x00003054   0x00000014   Data   RO           89    .rodata.s_LpuartAdapterBase  fsl_adapter_lpuart.o
    0x00003068   0x00003068   0x00000014   Data   RO          311    .rodata.s_lpuartBases  fsl_lpuart.o
    0x0000307c   0x0000307c   0x00000014   Data   RO          313    .rodata.s_lpuartClock  fsl_lpuart.o
    0x00003090   0x00003090   0x0000000a   Data   RO          314    .rodata.s_lpuartResets  fsl_lpuart.o
    0x0000309a   0x0000309a   0x0000009a   Data   RO           88    .rodata.str1.1      fsl_adapter_lpuart.o
    0x00003134   0x00003134   0x00000048   Data   RO          185    .rodata.str1.1      fsl_clock.o
    0x0000317c   0x0000317c   0x000000d7   Data   RO          312    .rodata.str1.1      fsl_lpuart.o
    0x00003253   0x00003253   0x0000002f   Data   RO          330    .rodata.str1.1      fsl_reset.o
    0x00003282   0x00003282   0x00000021   Data   RO          387    .rodata.str1.1      fsl_spc.o
    0x000032a3   0x000032a3   0x00000012   Data   RO          412    .rodata.str1.1      fsl_cmc.o
    0x000032b5   0x000032b5   0x0000042f   Data   RO          522    .rodata.str1.1      fsl_edma.o
    0x000036e4   0x000036e4   0x00000014   Data   RO          561    .rodata.str1.1      fsl_lptmr.o
    0x000036f8   0x000036f8   0x00000012   Data   RO          588    .rodata.str1.1      fsl_wuu.o
    0x0000370a   0x0000370a   0x0000035a   Data   RO          610    .rodata.str1.1      continuous_sram_address.o
    0x00003a64   0x00003a64   0x00000020   Data   RO          788    Region$$Table       anon$$obj.o


    Execution Region RW_m_data (Exec base: 0x20000000, Load base: 0x00003a84, Size: 0x0000009c, Max: 0x0001f800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003a84   0x00000004   Data   RW          104    .data.SystemCoreClock  system_mcxa156.o
    0x20000004   0x00003a88   0x00000004   Data   RW          608    .data.p_destBuf     continuous_sram_address.o
    0x20000008   0x00003a8c   0x00000004   Data   RW          186    .data.s_Ext_Clk_Freq  fsl_clock.o
    0x2000000c   0x00003a90   0x00000014   Data   RW          310    .data.s_lpuartIsr   fsl_lpuart.o
    0x20000020   0x00003aa4   0x00000010   Data   RW          605    .data.srcBuf1       continuous_sram_address.o
    0x20000030        -       0x00000001   Zero   RW          609    .bss.g_Transfer_Done  continuous_sram_address.o
    0x20000031   0x00003ab4   0x00000003   PAD
    0x20000034        -       0x00000020   Zero   RW          523    .bss.s_EDMAHandle   fsl_edma.o
    0x20000054        -       0x00000014   Zero   RW          657    .bss.s_debugConsole  fsl_debug_console.o
    0x20000068        -       0x00000014   Zero   RW          315    .bss.s_lpuartHandle  fsl_lpuart.o
    0x2000007c        -       0x00000010   Zero   RW          606    .bss.srcBuf2        continuous_sram_address.o
    0x2000008c        -       0x00000010   Zero   RW          607    .bss.srcBuf3        continuous_sram_address.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x2000009c, Load base: 0x00003ab4, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000009c        -       0x00000400   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2001fc00, Load base: 0x00003ab4, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2001fc00        -       0x00000400   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        50          0          0          0          0       7912   board.o
       360          0          0          0          0       9546   clock_config.o
      1654        144        858         20         33      35536   continuous_sram_address.o
       524         20        174          0          0       6765   fsl_adapter_lpuart.o
        80         44          0          0          0        968   fsl_assert.o
       610          4        104          4          0      33785   fsl_clock.o
       198          0         18          0          0       9356   fsl_cmc.o
      1216         92          0          0         20      12174   fsl_debug_console.o
      2564        300       1071          0         32      50604   fsl_edma.o
        64          0          0          0          0       1289   fsl_edma_soc.o
       138          0         20          0          0       2920   fsl_lptmr.o
      1680         28        265         20         20      44155   fsl_lpuart.o
       398          0         47          0          0       8585   fsl_reset.o
       716         16         33          0          0      14625   fsl_spc.o
       188          0         18          0          0       6384   fsl_wuu.o
        70          0          0          0          0      10345   pin_mux.o
       820        404        420          0          0       3725   startup_mcxa156.o
       272          0          0          4          0       4504   system_mcxa156.o

    ----------------------------------------------------------------------
     11668       1052       3060         48       2156     263178   Object Totals
         0          0         32          0       2048          0   (incl. Generated)
        66          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        40          0          0          0          0         76   memcpy.o
        18          0          0          0          0         76   memset.o
        14          0          0          0          0         68   strlen.o

    ----------------------------------------------------------------------
       160         16          0          0          0        288   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       158         16          0          0          0        288   mc_w.l

    ----------------------------------------------------------------------
       160         16          0          0          0        288   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11828       1068       3060         48       2156     263298   Grand Totals
     11828       1068       3060         48       2156     263298   ELF Image Totals
     11828       1068       3060         48          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14888 (  14.54kB)
    Total RW  Size (RW Data + ZI Data)              2204 (   2.15kB)
    Total ROM Size (Code + RO Data + RW Data)      14936 (  14.59kB)

==============================================================================

